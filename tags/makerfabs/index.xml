<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Makerfabs on inajobのいろいろレビュー</title>
    <link>https://inajob.github.io/iroiro-review/tags/makerfabs/</link>
    <description>Recent content in Makerfabs on inajobのいろいろレビュー</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Thu, 11 Aug 2022 04:03:25 +0000</lastBuildDate>
    
	<atom:link href="https://inajob.github.io/iroiro-review/tags/makerfabs/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>雰囲気の良い小型のWord Clockを手に入れた！</title>
      <link>https://inajob.github.io/iroiro-review/post/%E9%9B%B0%E5%9B%B2%E6%B0%97%E3%81%AE%E8%89%AF%E3%81%84%E5%B0%8F%E5%9E%8B%E3%81%AEword-clock%E3%82%92%E6%89%8B%E3%81%AB%E5%85%A5%E3%82%8C%E3%81%9F/</link>
      <pubDate>Thu, 11 Aug 2022 04:03:25 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E9%9B%B0%E5%9B%B2%E6%B0%97%E3%81%AE%E8%89%AF%E3%81%84%E5%B0%8F%E5%9E%8B%E3%81%AEword-clock%E3%82%92%E6%89%8B%E3%81%AB%E5%85%A5%E3%82%8C%E3%81%9F/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/small-word-clock-kit-cover.jpg"&gt;この記事はMakerfabsの提供でお届けします。
今回紹介するSmall Word Clock KitはMakerfabsから提供いただいたものです。
（ですが、Small Word Clock KitはMakerfabsをレビューしたい！と言ったのは自分なので、Makerfabsが無理やりこの商品を押しているわけではなく、inajobの一押しアイテム！、という感じです。）
というか、このガジェットは映画”マトリックス”風の小型でとてもかっこいいWord Clockで紹介していたものです。
何の因果か、今回これを手にすることができ、レビューすることが出来て、とてもうれしいです。
Small Word Clock Kitとは Word Clockという時計を知っていますか？
グリッド上に一見ランダムに並んだアルファベットが点灯し、そのアルファベットが時刻を表すという、ちょっと変わった種類のデジタル時計です。
このSmall Word Clock KitもそういったWord Clockの一種です。
Kitと書いてあることからもわかるように、組み立て式のキットとなっています。（ほとんどは組み立てられているため、組み立ては非常に簡単です）
動作の様子 この商品はインテリア的なものなので、細かい仕様よりは、見た目が気になる方が多いと思うので、まずは動作の様子を紹介します。
「Small」という名の通り手のひらより一回り小さいサイズです。
この写真は「IT IS」から始まり「TEN」「FIFTTEEN」「＊＊＊」「PM」のような表示となっており、これは午後10時18分を表しています。 小さな文字盤のため、すべての時刻を英単語で表すことができず、5分未満の分については「＊」で表されます。
また、時刻を表示する以外の機能として、それっぽいアニメーションを表示する機能もあります。
素敵なWordClockを手に入れた！
時計表示以外にもいい感じのアニメーション機能もついてます！https://t.co/wLrEcwYqSO pic.twitter.com/6rRzPSd8P2
&amp;mdash; ina_ani@2歳児のパパ (@ina_ani) August 11, 2022  ブロック崩しゲームのような動きをするものや、映画マトリックス風の表示のものなど何種類かのアニメーションを選択できます。
組み立てについて この商品は4枚の板がサンドイッチとなって構成されており、うち2枚は基板、うち2枚はアクリル板をレーザーカットしたものです。
基板上の部品はすべてはんだ付けされており、組み立てる必要はありません。
購入した人が組み立てるのは「これら4枚の板をくっつける」だけです。
くっつけ方は特に文書がないのですが、写真を見る限り基板同士を短い導線ではんだ付けするのがよさそうです。
自分は電子工作で余った抵抗の足を使って組み立てました。
仕様 仕様というか基板上の部品を見てみます
  PIC16F887
 コアとなるマイコン    DS1302S+
 RTC    CR1220
 RTC用のバックアップ電池    MicroUSB端子</description>
    </item>
    
    <item>
      <title>カメラ、液晶、タッチ、全部入りのESP32開発ボード</title>
      <link>https://inajob.github.io/iroiro-review/post/%E3%82%AB%E3%83%A1%E3%83%A9%E6%B6%B2%E6%99%B6%E3%82%BF%E3%83%83%E3%83%81%E5%85%A8%E9%83%A8%E5%85%A5%E3%82%8A%E3%81%AEesp32%E9%96%8B%E7%99%BA%E3%83%9C%E3%83%BC%E3%83%89/</link>
      <pubDate>Sun, 27 Mar 2022 13:00:18 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E3%82%AB%E3%83%A1%E3%83%A9%E6%B6%B2%E6%99%B6%E3%82%BF%E3%83%83%E3%83%81%E5%85%A8%E9%83%A8%E5%85%A5%E3%82%8A%E3%81%AEesp32%E9%96%8B%E7%99%BA%E3%83%9C%E3%83%BC%E3%83%89/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/esp32-tft-board-with-camera-cover.jpg"&gt;この記事はMakerfabsの提供でお届けします。
今回紹介するESP32 3.5&amp;quot; TFT Touch(Capacitive) with CameraはMakerfabsから提供いただいたものです。
（ですが、ESP32 3.5&amp;quot; TFT Touch(Capacitive) with Cameraをレビューしたい！と言ったのは自分なので、Makerfabsが無理やりこの商品を押しているわけではなく、inajobの一押しアイテム！、という感じです。）
ESP32 3.5&amp;quot; TFT Touch(Capacitive) with Cameraとは ESP32 3.5&amp;quot; TFT Touch(Capacitive) with CameraはMakerfabsはオープンソースのESP32を搭載した開発ボードです。
コアとなるマイコンはESP32で以下の機能があります
 ESP32-WROVER-B (技適あり) 3.5インチ 320*480 TFT 静電容量式タッチパネル 2Mピクセルのカメラモジュール USB書き込み(USB Type-C) MicroSDカードスロット（with 16GB MicroSDカード) 15ピンの拡張端子  デフォルトのファームウェアを試してみる USBケーブルをつなげるとデフォルトのファームウェアが起動します。
これはここにあるデジカメのような動作をするファームウェアのようです。
カメラの内容をリアルタイムにディスプレイに表示し、ボタンをタッチすることで写真をSDカードに保存することが出来ます。
カメラについては最近のスマートフォン比べると明らかに劣りますが、一応写真が取れる、という感じです。 （このファームウェアでは320 * 240の写真しか撮れないようでした。カメラの性能を考えるともっと高解像度の画像も撮影できるはずです。）
自分オリジナルの低画質なデジカメは、このファームウェアをちょっと改造するだけで作れそうです。
見どころ この商品は、ESP32と320*480のディスプレイ、カメラが搭載された、リーズナブルな開発ボードです。 IoTでこれらの部品を組み合わせたプロトタイピングを行う際に利用できそうです。
WiFiやBluetoothも使うことが出来、今流行りのIoT的なガジェットを作る際も役立ちそうです。ESP32-WROVER-Bは技適も取得しているので、日本でも安心して利用できる点もポイントです。
注意点としては、この製品には充電池は搭載されていないためスタンドアローンのガジェットを作りたいときは電源については別に考える必要があるという点と、カメラの画質はそこまで良くないという点です。
アクリル板を重ねて作ったケースもアドオンで販売されているので、裸で運用するのが怖い人は合わせて購入するのがよさそうです。
アイデア 自分が考えるこのボードで作れそうなアイデアを挙げてみると・・
 自分オリジナルのデジカメ（キャラクタが映りこむとか、撮影するとWiFiで即座にアップロードされるとか） 高解像度を生かしたゲーム（フレームレートを高めるのはコツが必要そう） デジタルフォトフレーム 電子情報端末（小型パソコンのようなもの） スマートセンサーの頭脳と表示装置  という感じです。
自分でボードから設計するとなると相当大変ですが、ESP32 3.5&amp;quot; TFT Touch(Capacitive) with CameraはMakerfabsのような開発ボードを利用することで、ソフトウェア開発だけで実現できます。</description>
    </item>
    
    <item>
      <title>ESP32を搭載した携帯ゲームエミュレータ「ESPlay Micro V2」</title>
      <link>https://inajob.github.io/iroiro-review/post/esp32%E3%82%92%E6%90%AD%E8%BC%89%E3%81%97%E3%81%9F%E6%90%BA%E5%B8%AF%E3%82%B2%E3%83%BC%E3%83%A0%E3%82%A8%E3%83%9F%E3%83%A5%E3%83%AC%E3%83%BC%E3%82%BFesplay-micro-v2/</link>
      <pubDate>Sun, 27 Feb 2022 23:30:43 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/esp32%E3%82%92%E6%90%AD%E8%BC%89%E3%81%97%E3%81%9F%E6%90%BA%E5%B8%AF%E3%82%B2%E3%83%BC%E3%83%A0%E3%82%A8%E3%83%9F%E3%83%A5%E3%83%AC%E3%83%BC%E3%82%BFesplay-micro-v2/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/esplay-micro-v2-cover.jpg"&gt;この記事はMakerfabsの提供でお届けします。
今回紹介するESPlay Micro V2はMakerfabsから提供いただいたものです。
（ですが、ESPlay Micro V2をレビューしたい！と言ったのは自分なので、Makerfabsが無理やりこの商品を押しているわけではなく、inajobの一押しアイテム！、という感じです。）
ESPlay Micro V2とは ESPlay Micro V2はオープンソースの携帯ゲーム機です。
コアとなるマイコンはESP32で、様々なレトロゲームのエミュレータが動作する、本格的なゲーム機です。
また、このゲーム機は以前紹介したESP32を搭載した携帯ゲーム機「ESPlay Micro」 の後継機種です。
仕様   ESP32-WROOBER
 という事で技適もあります。日本で使っても安心。    十字キー+ A,B, L,R, Start, Selectボタン
  I2C接続IOエキスパンダIC PCF8574
  I2S DAC IC UDA1334A (PAM8403?)
  イヤホンジャック端子
  USBシリアル変換IC CH340G
  320*240 TFT ディスプレイ
  アクリル板による筐体
  MicroSDカードスロット搭載（MicroSDカードも8GBのものが同梱されていました）
  拡張用I2C端子
  800mAh LiPo電池
  充電IC TP4054</description>
    </item>
    
    <item>
      <title>ATSAMD21搭載CircuitPythonでゲームが作れる激安携帯ゲーム端末「PewPew Standalone」</title>
      <link>https://inajob.github.io/iroiro-review/post/atsamd21%E6%90%AD%E8%BC%89circuitpython%E3%81%A7%E3%82%B2%E3%83%BC%E3%83%A0%E3%81%8C%E4%BD%9C%E3%82%8C%E3%82%8B%E6%BF%80%E5%AE%89%E6%90%BA%E5%B8%AF%E3%82%B2%E3%83%BC%E3%83%A0%E7%AB%AF%E6%9C%ABpewpew-standalone/</link>
      <pubDate>Sun, 06 Feb 2022 12:00:07 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/atsamd21%E6%90%AD%E8%BC%89circuitpython%E3%81%A7%E3%82%B2%E3%83%BC%E3%83%A0%E3%81%8C%E4%BD%9C%E3%82%8C%E3%82%8B%E6%BF%80%E5%AE%89%E6%90%BA%E5%B8%AF%E3%82%B2%E3%83%BC%E3%83%A0%E7%AB%AF%E6%9C%ABpewpew-standalone/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/pewpew-standalone-cover.jpg"&gt;この記事はMakerfabsの提供でお届けします。
今回紹介するPewPew StandaloneはMakerfabsから提供いただいたものです。
（ですが、PewPew Standaloneをレビューしたい！と言ったのは自分なので、Makerfabsが無理やりこの商品を押しているわけではなく、inajobの一押しアイテム！、という感じです。）
PewPew Standaloneとは PewPew Standaloneはオープンソースの携帯ゲーム機です。
ゲーム機と言っていますが、その性質は開発用プロトタイプボード、といった雰囲気のもので、この製品も基板むき出しで、ケースなどは付属していません。
仕様  ATSAMD21 8x8 ドットマトリクス赤色LED Micro USB接続（データ専用） 単4電池x2 駆動 十字ボタン+2ボタン = 6ボタン 拡張端子 オープンソースハードウェア 電源スイッチ M2と思われる固定用の穴（ケースは付属しません）  さらに細かい仕様は公式サイトを見てみてください。
遊んでみる 乾電池を入れて電源を入れると、初期ゲームが起動します。 ゲームランチャーが起動し、上下キーでいくつかのゲームを選んで起動することが出来ます。
 frog snake othello  乾電池が手元に無く、USBケーブルをつないで起動するか？と思いましたが、このゲーム機はこれでは起動しません。USBケーブルはデータ転送のみで電源は乾電池から得るという設計のようです。
もっというと、この基板上にはUSBからの5Vを3.3Vに降圧するためのレギュレータを搭載するためのフットプリントが存在しますが、実装されていません。確かにこれが無くても、乾電池さえ入れていればうまく動くので、「必要な人は取り付けてね」というスタンスなのでしょう。
ゲームを起動して気づくのは、単色のドットマトリクスLEDですが、階調表示を実現していることです。
ソースコードを見ると、どうやら4階調までサポートしているようですが、正直なところ消灯、中間、フルパワーの3段階がなんとか視認できるという程度で、あまり見やすいとは言えない表示方法のように見えました。
キーの入力も取りこぼしが多く、こちらもソースコードを見たところメインループの処理をゲームスピードに合わせて律速していると、キーのスキャンもそれに合わせて律速されてしまうようで、このせいで操作性が悪くなっているようでした。まぁ、この点はプログラムの書き方で改善できそうです。
パソコンとつないでみる（ゲーム開発編） パソコンとつなげると、マスストレージデバイスとしてふるまい、普通のUSBメモリのように認識されてファイル一覧を見ることが出来ます。
これはCircuitPythonの仕組みを利用しているようです。
前項で遊んだゲームはmain.pyに記述されたランチャーから各ゲームのスクリプト呼び出すことで実現しています。
ゲームを開発するときは、ドライブ直下にcode.pyというファイルを作り、それを編集することで動作を検証することが出来ます。
保存するたびにゲームが再読み込みされるような動作をするため、スムーズに開発をすることが出来ます。
例えば以下のような内容のcode.pyを作って保存することで、画面に顔マークを横スクロールで表示できます。
import pew pew.init() face = pew.Pix.from_iter(( (0, 0, 3, 3, 3, 3, 0, 0), (0, 3, 0, 0, 0, 0, 3, 0), (3, 0, 3, 0, 0, 3, 0, 3), (3, 0, 3, 0, 0, 3, 0, 3), (3, 0, 0, 0, 0, 0, 0, 3), (3, 0, 3, 3, 3, 3, 0, 3), (0, 3, 0, 0, 0, 0, 3, 0), (0, 0, 3, 3, 3, 3, 0, 0), )) screen = pew.</description>
    </item>
    
  </channel>
</rss>

