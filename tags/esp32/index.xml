<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ESP32 on inajobのいろいろレビュー</title>
    <link>https://inajob.github.io/iroiro-review/tags/esp32/</link>
    <description>Recent content in ESP32 on inajobのいろいろレビュー</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Mon, 31 Jan 2022 12:30:48 +0000</lastBuildDate>
    
	<atom:link href="https://inajob.github.io/iroiro-review/tags/esp32/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ArduinoでプログラミングできるWiFiにも対応したレシートプリンタ「ATOM Printer」</title>
      <link>https://inajob.github.io/iroiro-review/post/arduino%E3%81%A7%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E3%81%A7%E3%81%8D%E3%82%8Bwifi%E3%81%AB%E3%82%82%E5%AF%BE%E5%BF%9C%E3%81%97%E3%81%9F%E3%83%AC%E3%82%B7%E3%83%BC%E3%83%88%E3%83%97%E3%83%AA%E3%83%B3%E3%82%BFatom-printer/</link>
      <pubDate>Mon, 31 Jan 2022 12:30:48 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/arduino%E3%81%A7%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E3%81%A7%E3%81%8D%E3%82%8Bwifi%E3%81%AB%E3%82%82%E5%AF%BE%E5%BF%9C%E3%81%97%E3%81%9F%E3%83%AC%E3%82%B7%E3%83%BC%E3%83%88%E3%83%97%E3%83%AA%E3%83%B3%E3%82%BFatom-printer/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/atom-printer-cover.jpg"&gt;この記事はBanggoodの提供でお届けします。
以前紹介したようにこのブログはBanggoodと提携させていただいており、今回紹介するM5Stack ATOM Printerも、Banggoodからいただいたものとなります。（M5Stack ATOM Printerのレビューがしたい！と言ったのは自分なので、Banggoodが無理やりこの商品を押しているわけではなく、inajobの一押しアイテム！、という感じです。）
ATOM Thermal Printer Kit とは この商品はM5Stack社のATOM Liteという小型モジュールに感熱紙プリンタがくっついたものです。
ATOM LiteのコアはESP32-Pico-D4で、もちろんWiFiをサポートしています。
WiFiで指示を受け取り、感熱紙に文字や画像を印刷するようなプロトタイピングを迅速に開発できます。
仕様  ATOM Lite: ESP32-Pico-D4 4MB Flash 技適付き ボール紙による筐体 UARTによる制御  使用前の準備 この製品を使うためには、12VのACアダプタが必要です、また書き込みのためにはATOM Liteに接続するためのUSB Type-Cケーブルが必要です。
ACアダプタは12V2.5A以上のものが必要と書いてありましたが、我が家には2Aの物しかなく、これで動かしています。
12VのACアダプタをつなげれば・・と思いましたが、どうも初期ファームウェアに不具合があるようで、WiFiに接続できないエラーが延々と出力されてしまいます。
この問題はM5Stack社に報告したので、近いうちに修正されると思いますが、同様の問題に遭遇した人のために修正方法を記載しておきます。
ファームウェアの不具合による問題からの復旧（症状が起きている場合のみ） 症状としては、AC12Vで電源を入れた時にプリンタから「Mode: UIFLOW」「WiFi Password Erro！」という文字が延々と印刷されるというものです。 期待する挙動としてはATOM Liteのボタンを押すことでModeがAPとなることなのですが、どうもこれがうまく動かないようです。
ここまでの症状が同じ場合は、以下の手順で復旧が出来ます。
この初期ファームウェアのソースコードは以下に存在しています。
https://github.com/m5stack/ATOM-PRINTER/blob/master/examples/FactoryTest/FactoryTest.ino
このリポジトリをGitを使い手元にCloneし、Arduino IDEで開きます。
Arduino IDEでATOM Liteの開発をするためにはUSBシリアルドライバのインストールと、ボードのインストール・ライブラリのインストールが必要です。以下を参考に設定します。
https://docs.m5stack.com/en/quick_start/atom/arduino
FactoryTest.inoがビルドできることを確認出来たら、少し内容を修正します。
具体的には、この80行目の後に preferences.putBool(&amp;quot;PRINTER_MODE&amp;quot;, APMode);という行を入れます。
https://github.com/m5stack/ATOM-PRINTER/blob/master/examples/FactoryTest/FactoryTest.ino#L130
この修正を行ったFactoryTest.inoを一度書き込んで実行すれば、後は元に戻したFactoryTest.inoでもうまく動作します。
おそらくこれはATOM Printerの製品の検品時に、テスト用のWiFiのAPに接続するテストを行っていることが原因です。
現在のファームウェアは一度設定されたWiFiに接続できることを前提に処理が組まれており、つながらない場合は本体をリセットし続けて接続できるのを待ってしまいます。
しかし当然我が家にはATOM Printerの検品時に接続していたWiFiがあるわけもなく、何度リセットしても接続できません。
WiFiの設定は不揮発メモリに保持されているため、ファームウェアを書き直してもWiFiの設定が消えません。
ここに記載した処理は、WiFiの設定が存在していてもそれを無視してAPモードとして振舞うように不揮発メモリに記録するというものです。
一度モードを不揮発メモリに記録すれば、この問題は解消します。
おそらくこの問題は近いうちに解消すると思います。手元でこの問題が起こらない場合はこの対応は不要です。
動作確認 さてお待ちかねの動作確認です。
APモードで起動したATOM PrinterはWiFiのAPとして振舞います。 手元のスマートフォンなどで、WiFiスポットを調べてみると ATOM Printerという文字を含むSSIDが見えると思います。 そのWiFiにスマートフォンを接続し、ATOM Printerから印字されたIPアドレスにブラウザからアクセスすることで、プリンタを制御するためのWebUIを表示することが出来ます。</description>
    </item>
    
    <item>
      <title>ゲームボーイアドバンスをESP32の力でBluetoothゲームコントローラにするHACK</title>
      <link>https://inajob.github.io/iroiro-review/post/%E3%82%B2%E3%83%BC%E3%83%A0%E3%83%9C%E3%83%BC%E3%82%A4%E3%82%A2%E3%83%89%E3%83%90%E3%83%B3%E3%82%B9%E3%82%92esp32%E3%81%AE%E5%8A%9B%E3%81%A7bluetooth%E3%82%B2%E3%83%BC%E3%83%A0%E3%82%B3%E3%83%B3%E3%83%88%E3%83%AD%E3%83%BC%E3%83%A9%E3%81%AB%E3%81%99%E3%82%8Bhack/</link>
      <pubDate>Tue, 23 Nov 2021 12:00:36 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E3%82%B2%E3%83%BC%E3%83%A0%E3%83%9C%E3%83%BC%E3%82%A4%E3%82%A2%E3%83%89%E3%83%90%E3%83%B3%E3%82%B9%E3%82%92esp32%E3%81%AE%E5%8A%9B%E3%81%A7bluetooth%E3%82%B2%E3%83%BC%E3%83%A0%E3%82%B3%E3%83%B3%E3%83%88%E3%83%AD%E3%83%BC%E3%83%A9%E3%81%AB%E3%81%99%E3%82%8Bhack/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/gba-meets-esp32.jpg"&gt;Game Boy Advance Bluetooth HIDから発見。画像もここから転載。
ゲームボーイアドバンスには通信ケーブルのポートがあります。このポートは通信対戦などで用いるのですが、その際カセットが刺さっていない端末にもプログラムを転送する機能があります。
この記事では、この機能を逆手にとって通信ポートから独自のプログラムを流し込んで実行するという手法を使い、ESP32をゲームボーイアドバンスに接続し、Bluetoothゲームコントローラとして利用できるようにするHACKを紹介しています。
ゲームコントローラにする以外にもこの通信ポートを使ったHACKは利用できそうです。</description>
    </item>
    
    <item>
      <title>ESP32を搭載した携帯ゲーム機「ESPlay Micro」</title>
      <link>https://inajob.github.io/iroiro-review/post/esp32%E3%82%92%E6%90%AD%E8%BC%89%E3%81%97%E3%81%9F%E6%90%BA%E5%B8%AF%E3%82%B2%E3%83%BC%E3%83%A0%E6%A9%9Fesplay-micro/</link>
      <pubDate>Tue, 02 Nov 2021 23:00:22 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/esp32%E3%82%92%E6%90%AD%E8%BC%89%E3%81%97%E3%81%9F%E6%90%BA%E5%B8%AF%E3%82%B2%E3%83%BC%E3%83%A0%E6%A9%9Fesplay-micro/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/esplay-micro.jpg"&gt;ESPlay Micro - Open Source ESP32 Game Consoleから発見。画像もここから転載。
ESPlay MicroはESP32を搭載した携帯ゲーム機です。
十字ボタンとA,B、L,R、Start,Selectなど、ゲームを操作するのに必要なボタンが搭載され、バッテリーチャージ回路、I2Sオーディオ、3.5mmオーディオジャックなど、携帯ゲーム機としては十分な機能を持っています。
ESP32はパワフルなマイコンで、レトロゲームのエミュレータなども多く移植されています。</description>
    </item>
    
    <item>
      <title>シンプルなOLED搭載のESP32開発ボード</title>
      <link>https://inajob.github.io/iroiro-review/post/%E3%82%B7%E3%83%B3%E3%83%97%E3%83%AB%E3%81%AAoled%E6%90%AD%E8%BC%89%E3%81%AEesp32%E9%96%8B%E7%99%BA%E3%83%9C%E3%83%BC%E3%83%89/</link>
      <pubDate>Sun, 29 Aug 2021 11:00:19 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E3%82%B7%E3%83%B3%E3%83%97%E3%83%AB%E3%81%AAoled%E6%90%AD%E8%BC%89%E3%81%AEesp32%E9%96%8B%E7%99%BA%E3%83%9C%E3%83%BC%E3%83%89/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/makepython-esp32.jpg"&gt;MakePython ESP32から発見。画像もここから転載。
128x64のOLEDを搭載した安価なESP32開発ボードです。PSRAM搭載のWROVER版もあり、普通のDevKitにOLEDを取り付けてプロトタイピングをしている方には最適です。</description>
    </item>
    
    <item>
      <title>ESP32を使うと簡単にBluetoothキーボードっぽいものが作れる</title>
      <link>https://inajob.github.io/iroiro-review/post/esp32%E3%82%92%E4%BD%BF%E3%81%86%E3%81%A8%E7%B0%A1%E5%8D%98%E3%81%ABbluetooth%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E3%81%A3%E3%81%BD%E3%81%84%E3%82%82%E3%81%AE%E3%81%8C%E4%BD%9C%E3%82%8C%E3%82%8B/</link>
      <pubDate>Wed, 09 Jun 2021 12:00:47 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/esp32%E3%82%92%E4%BD%BF%E3%81%86%E3%81%A8%E7%B0%A1%E5%8D%98%E3%81%ABbluetooth%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E3%81%A3%E3%81%BD%E3%81%84%E3%82%82%E3%81%AE%E3%81%8C%E4%BD%9C%E3%82%8C%E3%82%8B/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/bluetooth-hid.png"&gt;EMULATING A BLUETOOTH KEYBOARD WITH THE ESP32から発見。画像もここから転載。
ESP32は非常に強力なマイコンで、しかもかなり安く手に入ります。
 ESP32はWiFiとBluetoothをサポートしており、WiFiはよく使われていますが、Bluetoothについては、あまり使用例を見かけないかもしれません。
しかし、この記事にあるようにESP32を使うと非常に簡単にBluetoothキーボードっぽいガジェットを作ることが出来ます。
いくつかのスイッチをESP32に接続し、すでに存在しているHIDのライブラリをちょっと利用すればあっという間にBluetooth接続のキーボードやゲームパッドの完成です。
オリジナルのキーボードやゲームパッドのアイデアのある方は試してみてはどうでしょうか？
 </description>
    </item>
    
    <item>
      <title>ソートアルゴリズムを可視化する装置</title>
      <link>https://inajob.github.io/iroiro-review/post/%E3%82%BD%E3%83%BC%E3%83%88%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0%E3%82%92%E5%8F%AF%E8%A6%96%E5%8C%96%E3%81%99%E3%82%8B%E8%A3%85%E7%BD%AE/</link>
      <pubDate>Sun, 30 May 2021 10:00:17 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E3%82%BD%E3%83%BC%E3%83%88%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0%E3%82%92%E5%8F%AF%E8%A6%96%E5%8C%96%E3%81%99%E3%82%8B%E8%A3%85%E7%BD%AE/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/algorithm-machine.jpg"&gt;The Algorithm Machineから発見。画像もここから転載。(CC BY-NC-SA by thatguyer)
ソートのアルゴリズムは様々あり、これを始めて学ぶ人は面食らってしまう人も多いと思います。
そこでこの記事では「ソートのアルゴリズム」を可視化する装置を作っています。
フルカラーLEDを横一列に大量に並べ、それをソート中の配列とみなし、さらにそれと並行して、現在比較している配列の要素を示す▽を示すLEDを配置しています。
ボタンの操作により様々なソートのアルゴリズムの動作例を目で見て確かめることが出来ます。
 </description>
    </item>
    
    <item>
      <title>かわいいキーボード付きのESP32開発機 TTGO T-Watch Keyboard</title>
      <link>https://inajob.github.io/iroiro-review/post/%E3%81%8B%E3%82%8F%E3%81%84%E3%81%84%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E4%BB%98%E3%81%8D%E3%81%AEesp32%E9%96%8B%E7%99%BA%E6%A9%9F-ttgo-t-watch-keyboard/</link>
      <pubDate>Sun, 25 Apr 2021 11:00:37 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E3%81%8B%E3%82%8F%E3%81%84%E3%81%84%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E4%BB%98%E3%81%8D%E3%81%AEesp32%E9%96%8B%E7%99%BA%E6%A9%9F-ttgo-t-watch-keyboard/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/t-watch-keyboard-cover.png"&gt;かわいいキーボード付きのESP32開発機 TTGO T-Watch Keyboard
この記事はBanggoodの提供でお届けします。
以前紹介したようにこのブログはBanggoodと提携させていただいており、今回紹介するTTGO T-Watch KeyboardはBanggoodからいただいたものとなります。 TTGO T-Watch Keyboardのレビューがしたい！と言ったのは自分なので、Banggoodが無理やりこの商品を押しているわけではなく、inajobの一押しアイテム！、という感じです。）
・・・ といういつもの前置きはそこそこに、TTGO T-Watch Keyboardについて紹介していきます。
そして、今回もこのブログのために2021/05/31まで利用できるクーポンを頂くことが出来たので、そちらも紹介します。
TTGO T-Watch Keyboard とは TTGO T-Watch Keyboardは TTGO T-Watchという製品にキーボードのオプションが搭載された製品です。
TTGO T-Watchというのは、いわゆるスマートウォッチの開発キットです。とはいっても、普通のスマートウォッチと違うところは標準的なソフトウェアを持たないという点です。
普通のスマートウォッチ、例えばFitBitやApple Watchであれば、当然ハードウェアと、ソフトウェアはセットです。しかしこのTTGO T-Watchは開発用途という事で、標準的なソフトウェアを搭載せずに、ハードウェアのみの製品です。
ここまでのところで、ピンときた方もいるかもしれませんが、これはM5Stackとよく似たコンセプトの製品です。それどころか、メインのCPUがESP32であったりと、その構成も非常によく似ています。
さて、このTTGO T-Watchは、バンドをつけることで、（ちょっと大きな）スマートウォッチとして利用できるのですが、今回紹介する TTGO T-Watch Keyboardは、スマートウォッチのバンドを取り付ける部分に、小さなキーボードを搭載することで、ミニチュアのノートパソコンのように構成されたちょっと変わったガジェットです。
キーボードはI2CでTTGO T-Watch本体と接続されており、ライブラリを利用することで非常に簡単にキーボードからの入力をハンドリング出来ます。
といったところで、この製品の詳細なスペックを見てみましょう。
 メインCPU: ESP32 USBtoシリアル変換: CP2104 MicroSDカードスロット 16MBのQSPI接続のフラッシュメモリ メインCPU内蔵の520KBのSRAMと、外付けのPSRAM 8MB 電源ボタンと、もう一つ好きに使えるボタン 40MHzの水晶発振子 RTC: PCF8563 1.54inchのタッチ機能付き液晶画面 三軸加速度センサー: BMA423 リチウムイオンバッテリ（容量未記載だが200mAh） 技適取得済み  と、まぁもりだくさんです。
キーボード部分は
 Blackberryのキーボード ATSAMD20(ここを改造するとキーボードに機能を増やせそうです)  という感じです。 キーボード部分はI2Cのピンが出ているので、このキーボードだけを別のプロダクトに流用することも簡単に出来そうです。
外観 実用性はおいておいて、とてもチャーミングな筐体です。 キーボード部分は腕時計として利用する際のリストバンドを固定するための軸受けに取り付けられており、好きな角度に曲がります。
しかし、保持力はあまりないようで、中途半端な角度で固定しようとしてもパタンと重たい方に倒れてしまいます。</description>
    </item>
    
    <item>
      <title>液晶とキーボード付きのSTM32とESP32を搭載した端末</title>
      <link>https://inajob.github.io/iroiro-review/post/%E6%B6%B2%E6%99%B6%E3%81%A8%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E4%BB%98%E3%81%8D%E3%81%AEstm32%E3%81%A8esp32%E7%AB%AF%E6%9C%AB/</link>
      <pubDate>Mon, 01 Feb 2021 11:00:18 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E6%B6%B2%E6%99%B6%E3%81%A8%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E4%BB%98%E3%81%8D%E3%81%AEstm32%E3%81%A8esp32%E7%AB%AF%E6%9C%AB/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/dumbdumb.jpg"&gt;DumbDumbから発見。画像もここから転載。
STM32コア（stm32g071r8）のほうで液晶の制御とVT100ターミナルエミュレータが実装されESP32上で動くMicroPythonとも連携できるようです。
単純なモバイルコンソール端末としても使い勝手がよさそうで、このようにデュアルプロセッサ構成にして、役割分担してモバイル端末を作るのも面白そうだと感じました。</description>
    </item>
    
    <item>
      <title>ESP32/M5Stack用のメガドライブ音源エミュレータ</title>
      <link>https://inajob.github.io/iroiro-review/post/esp32-m5stack%E7%94%A8%E3%81%AE%E3%83%A1%E3%82%AC%E3%83%89%E3%83%A9%E3%82%A4%E3%83%96%E9%9F%B3%E6%BA%90%E3%82%A8%E3%83%9F%E3%83%A5%E3%83%AC%E3%83%BC%E3%82%BF/</link>
      <pubDate>Mon, 18 Jan 2021 11:00:58 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/esp32-m5stack%E7%94%A8%E3%81%AE%E3%83%A1%E3%82%AC%E3%83%89%E3%83%A9%E3%82%A4%E3%83%96%E9%9F%B3%E6%BA%90%E3%82%A8%E3%83%9F%E3%83%A5%E3%83%AC%E3%83%BC%E3%82%BF/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/m5stack-synth.jpg"&gt;h1romas4 /m5stack-synth-emulationから発見。画像もここから転載。
ESP32, M5Stackで動作するメガドライブの音源エミュレータです。
メガドライブの音源ICであるYM2612とSN76489をソフトウェアでエミュレーションしているようです。
ICが調達できなくなっても、最近のパワフルなプロセッサであればエミュレーションすることが出来るというのは、ほかにも応用がききそうなテクニックです。
 </description>
    </item>
    
    <item>
      <title>ESP32を搭載した小型のPDA</title>
      <link>https://inajob.github.io/iroiro-review/post/esp32%E3%82%92%E6%90%AD%E8%BC%89%E3%81%97%E3%81%9F%E5%B0%8F%E5%9E%8B%E3%81%AEpda/</link>
      <pubDate>Sun, 15 Nov 2020 23:00:05 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/esp32%E3%82%92%E6%90%AD%E8%BC%89%E3%81%97%E3%81%9F%E5%B0%8F%E5%9E%8B%E3%81%AEpda/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/esp32-pda-board.jpg"&gt;Low Power ESP32 Handheldから発見。画像もここから転載。
ESP32がコアのPDA風ガジェットです。シャープのメモリ液晶とESP32に内蔵されている低消費電力プロセッサ ULPを活用することで、低電力での動作を実現しています。
加速度センサーも内蔵しており、これを利用したキーボード入力なども紹介されています。
 </description>
    </item>
    
  </channel>
</rss>

