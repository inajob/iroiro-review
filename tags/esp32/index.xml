<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ESP32 on inajobのいろいろレビュー</title>
    <link>https://inajob.github.io/iroiro-review/tags/esp32/</link>
    <description>Recent content in ESP32 on inajobのいろいろレビュー</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Sun, 23 Apr 2023 23:16:58 +0000</lastBuildDate>
    
	<atom:link href="https://inajob.github.io/iroiro-review/tags/esp32/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>128x64のOLEDが2画面搭載されたスマートウォッチ</title>
      <link>https://inajob.github.io/iroiro-review/post/128x64%E3%81%AEoled%E3%81%8C2%E7%94%BB%E9%9D%A2%E6%90%AD%E8%BC%89%E3%81%95%E3%82%8C%E3%81%9F%E3%82%B9%E3%83%9E%E3%83%BC%E3%83%88%E3%82%A6%E3%82%A9%E3%83%83%E3%83%81/</link>
      <pubDate>Sun, 23 Apr 2023 23:16:58 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/128x64%E3%81%AEoled%E3%81%8C2%E7%94%BB%E9%9D%A2%E6%90%AD%E8%BC%89%E3%81%95%E3%82%8C%E3%81%9F%E3%82%B9%E3%83%9E%E3%83%BC%E3%83%88%E3%82%A6%E3%82%A9%E3%83%83%E3%83%81/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/128x64のOLEDが2画面搭載されたスマートウォッチ.jpg"&gt;ESP32 Dual-screen watch V2から発見。画像もここから転載。
AliExpressなどを探すと128x64の小型のOLEDを見つけられますが、用途によっては少し小さすぎます。 この記事で紹介しているスマートウォッチは、このOLEDを2枚並べてこの問題を解決しています。
コアとなるマイコンモジュールはXIAO ESP32C3です。</description>
    </item>
    
    <item>
      <title>14セグメント24桁のディスプレイ</title>
      <link>https://inajob.github.io/iroiro-review/post/24%E3%82%BB%E3%82%B0%E3%83%A1%E3%83%B3%E3%83%8812%E6%A1%81%E3%81%AE%E3%83%87%E3%82%A3%E3%82%B9%E3%83%97%E3%83%AC%E3%82%A4/</link>
      <pubDate>Tue, 11 Apr 2023 00:01:52 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/24%E3%82%BB%E3%82%B0%E3%83%A1%E3%83%B3%E3%83%8812%E6%A1%81%E3%81%AE%E3%83%87%E3%82%A3%E3%82%B9%E3%83%97%E3%83%AC%E3%82%A4/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/24セグメント12桁のディスプレイ.jpg"&gt;S14Clock LED Word Clock Kit (24 Characters) by Store139 on Tindieから発見。画像もここから転載。
14セグメント24桁のディスプレイです。(12桁のものもあるようです。) 制御はESP32 S2 Miniで、もちろんWiFi経由で設定が出来ます。
これだけセグメントがあるとアルファベットを表示することが出来るので、様々な情報の表示機として活用できそうです。
表示の切り替えエフェクトなど、細かい作りこみがされており、このガジェットだけでかなりのことが出来そうです。
 </description>
    </item>
    
    <item>
      <title>今日の予定を表示してくれる電子ペーパガジェット</title>
      <link>https://inajob.github.io/iroiro-review/post/%E4%BB%8A%E6%97%A5%E3%81%AE%E4%BA%88%E5%AE%9A%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%97%E3%81%A6%E3%81%8F%E3%82%8C%E3%82%8B%E9%9B%BB%E5%AD%90%E3%83%9A%E3%83%BC%E3%83%91%E3%82%AC%E3%82%B8%E3%82%A7%E3%83%83%E3%83%88/</link>
      <pubDate>Sun, 26 Mar 2023 23:42:06 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E4%BB%8A%E6%97%A5%E3%81%AE%E4%BA%88%E5%AE%9A%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%97%E3%81%A6%E3%81%8F%E3%82%8C%E3%82%8B%E9%9B%BB%E5%AD%90%E3%83%9A%E3%83%BC%E3%83%91%E3%82%AC%E3%82%B8%E3%82%A7%E3%83%83%E3%83%88/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/今日の予定を表示してくれる電子ペーパガジェット.jpg"&gt;The Timeframeから発見。画像もここから転載。
今日の予定を表示してくれる電子ペーパガジェットを紹介します。
このガジェットはLilyGo T5というものですが、ESP32と電子ペーパーモジュールがあれば似たものを作れそうです。
仕組みとしては、サーバにある画像を表示するプログラムをESP32に仕込んでおき、スケジュールの画像はサーバで生成しているようです。（Google Clendarの画面をSeleniumでキャプチャしただけのようです）
この方式だと、ESP32側はシンプルなプログラムでよく、かつサーバ側の実装を差し替えることで、あらゆる画像を表示できます。</description>
    </item>
    
    <item>
      <title>自作のオーディオプレイヤーを作るための拡張ボード「MakePython Audio Expansion」</title>
      <link>https://inajob.github.io/iroiro-review/post/%E8%87%AA%E4%BD%9C%E3%81%AE%E3%82%AA%E3%83%BC%E3%83%87%E3%82%A3%E3%82%AA%E3%83%97%E3%83%AC%E3%82%A4%E3%83%A4%E3%83%BC%E3%82%92%E4%BD%9C%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AE%E6%8B%A1%E5%BC%B5%E3%83%9C%E3%83%BC%E3%83%89makepython-audio-expansion/</link>
      <pubDate>Tue, 21 Feb 2023 23:12:44 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E8%87%AA%E4%BD%9C%E3%81%AE%E3%82%AA%E3%83%BC%E3%83%87%E3%82%A3%E3%82%AA%E3%83%97%E3%83%AC%E3%82%A4%E3%83%A4%E3%83%BC%E3%82%92%E4%BD%9C%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AE%E6%8B%A1%E5%BC%B5%E3%83%9C%E3%83%BC%E3%83%89makepython-audio-expansion/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/makepython-audio-expansion-cover.jpg"&gt;この記事はMakerfabsの提供でお届けします。
今回紹介するMakePython Audio ExpansionはMakerfabsから提供いただいたものです。
（ですが、MakePython Audio ExpansionはMakerfabsをレビューしたい！と言ったのは自分なので、Makerfabsが無理やりこの商品を押しているわけではなく、inajobの一押しアイテム！、という感じです。）
MakePython Audio Expansionとは [以前レビューしたMakePython ESP32 Color LCD](../../post/高解像度液晶付きのESP32開発ボードMakePython ESP32 Color LCD) や MakePython ESP32と組み合わせて利用することで、オーディオガジェットを作ることが出来る拡張ボードです。
 オーディオDACのUDA1334ATS 2つのジョグダイアル Micro SDカードスロット オーディオジャック  MP3プレイヤーを動かしてみる このモジュールは公式にはMakePython ESP32用のサンプルプログラムしか存在しなくて、MakePython ESP32 Color LCD向けのプログラムは存在していません。
そこでGitHubを探してみると以下のプログラムを発見しました。
https://github.com/VolosR/MakePythonLCDMP3
これはMakePython ESP32 Color LCDとMakePython Audio Expansionを組み合わせて動作するMP3プレーヤーのプログラムです。
しかし、このプログラム、意外と一筋縄では動きませんでした。
メモ的に変更点を列挙すると・・
Arduino IDEにインポートするライブラリが自明ではない このプログラムはArduino IDEでビルドする事を前提として作られているため、依存するライブラリについては、自分で個別にインストールする必要があります。 （これはArduino IDEの良くないところで、Platformioなどを使うとライブラリも管理出来て便利だと考えています）
  SPI_eTFT 2.5.0(最新)
 設定が必要（後述）    https://github.com/schreibfaul1/ESP32-audioI2S
 Audioという名前でライブラリマネージャを検索して出てくるライブラリではないので注意 こちらはライブラリマネージャにないのでGitHubからZIPファイルをダウンロードしてインストールする    SPI_eTFTの設定 SPI_eTFTの設定は、インストールしたライブラリのファイルを直接書き換える方法により行います（もっと行儀のよい方法があれば教えてほしいです・・）
User_Setup_Select.hの以下の行のコメントを外す
 #include &amp;lt;User_Setups/Setup24_ST7789.</description>
    </item>
    
    <item>
      <title>ESP32で動くVGA出力機能付きのテキストエディタ</title>
      <link>https://inajob.github.io/iroiro-review/post/esp32%E3%81%A7%E5%8B%95%E3%81%8Fvga%E5%87%BA%E5%8A%9B%E6%A9%9F%E8%83%BD%E4%BB%98%E3%81%8D%E3%81%AE%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%82%A8%E3%83%87%E3%82%A3%E3%82%BF/</link>
      <pubDate>Sun, 04 Dec 2022 23:18:39 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/esp32%E3%81%A7%E5%8B%95%E3%81%8Fvga%E5%87%BA%E5%8A%9B%E6%A9%9F%E8%83%BD%E4%BB%98%E3%81%8D%E3%81%AE%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%82%A8%E3%83%87%E3%82%A3%E3%82%BF/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/ESP32で動くVGA出力機能付きのテキストエディタ.jpg"&gt;GitHub - maksimKorzh/esp32-kilo: Kilo text editor port to esp32 using FabGLから発見。画像もここから転載。
ESP32でVGA出力付きのテキストエディタの作例です。 エディタ界隈では有名(?)なkiloという実装を参考に作られており、短いコードでテキストエディタが作られています。
画面出力部分はFabGLを利用しているため、ソースコードは600行程度とシンプルにまとまっています。
ESP32を使ったDOSみたいな仕組みがあると、結構何でもできてしまうのではないかと妄想が膨らみます。</description>
    </item>
    
    <item>
      <title>WT32-SC01用のかっこいいUIサンプル</title>
      <link>https://inajob.github.io/iroiro-review/post/wt32-sc01%E7%94%A8%E3%81%AE%E3%81%8B%E3%81%A3%E3%81%93%E3%81%84%E3%81%84ui%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB/</link>
      <pubDate>Sun, 30 Oct 2022 23:22:07 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/wt32-sc01%E7%94%A8%E3%81%AE%E3%81%8B%E3%81%A3%E3%81%93%E3%81%84%E3%81%84ui%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/WT32-SC01用のかっこいいUIサンプル.jpg"&gt;Wt32-SC01 ESP32 Lumiaから発見。画像もここから転載。
ESP32を搭載した液晶画面付きの開発ボードWT32-SC01での利用を想定したWindows PhoneのUI風のUIライブラリです。
ESP32でもここまでの画面表示ができるのかと、感動できるデモです。
組み込み機器のUIというとどうしても必要最低限の簡素なものが多いですが、こういうリッチな表示にするのも面白そうです。</description>
    </item>
    
    <item>
      <title>手のひらサイズのかわいいCO2モニタ</title>
      <link>https://inajob.github.io/iroiro-review/post/%E6%89%8B%E3%81%AE%E3%81%B2%E3%82%89%E3%82%B5%E3%82%A4%E3%82%BA%E3%81%AE%E3%81%8B%E3%82%8F%E3%81%84%E3%81%84co2%E3%83%A2%E3%83%8B%E3%82%BF/</link>
      <pubDate>Thu, 27 Oct 2022 23:13:02 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E6%89%8B%E3%81%AE%E3%81%B2%E3%82%89%E3%82%B5%E3%82%A4%E3%82%BA%E3%81%AE%E3%81%8B%E3%82%8F%E3%81%84%E3%81%84co2%E3%83%A2%E3%83%8B%E3%82%BF/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/手のひらサイズのかわいいCO2モニタ.jpg"&gt;CO₂ Cubed!から発見。画像もここから転載。
手のひらサイズのかわいいCO2モニタの作例です。
筐体は3Dプリンタで作成され、表示機として2色のドットマトリクスLEDを用いています。
ドットマトリクスLEDといえば単色のものをよく見かけますが2色表示のものも独特の雰囲気があって良いですね。
制御にはESP32-S2を利用しています。</description>
    </item>
    
    <item>
      <title>ESP32でモバイルVNCクライアント</title>
      <link>https://inajob.github.io/iroiro-review/post/esp32%E3%81%A7%E3%83%A2%E3%83%90%E3%82%A4%E3%83%ABvnc%E3%82%AF%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%88/</link>
      <pubDate>Tue, 18 Oct 2022 23:19:08 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/esp32%E3%81%A7%E3%83%A2%E3%83%90%E3%82%A4%E3%83%ABvnc%E3%82%AF%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%88/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/ESP32でモバイルVNCクライアント.jpg"&gt;陳亮手痕定律 さんのTweetから発見。画像もここから転載。
ESP32を使ったVNC端末の作例です。
ESP32はパワフルでWiFi機能も備えているので、確かにこういうことはできそうな気がしますが、ここまでスムーズに動作させるためにはかなりの苦労が必要なのではと思いました。
以前同じ作者のRaspberry Pi Pico Wを使ったVNCクライアントの作例を紹介しましたが、Raspberry Pi Pico Wは技適の問題で、まだ日本では利用できないことが課題でした。
ESP32は技適取得済みのモジュールもあるので、日本でも試すことが出来そうです。
ソースコードなどはここ から入手できそうです。
#ESP32 x #BBQ10 keyboard #VNC to #Linux operating Terminal pic.twitter.com/fhsxHwCPVL
&amp;mdash; 陳亮手痕定律 (@moononournation) October 5, 2022  </description>
    </item>
    
    <item>
      <title>高解像度液晶付きのESP32開発ボードMakePython ESP32 Color LCD</title>
      <link>https://inajob.github.io/iroiro-review/post/%E9%AB%98%E8%A7%A3%E5%83%8F%E5%BA%A6%E6%B6%B2%E6%99%B6%E4%BB%98%E3%81%8D%E3%81%AEesp32%E9%96%8B%E7%99%BA%E3%83%9C%E3%83%BC%E3%83%89makepython-esp32-color-lcd/</link>
      <pubDate>Mon, 10 Oct 2022 19:37:01 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E9%AB%98%E8%A7%A3%E5%83%8F%E5%BA%A6%E6%B6%B2%E6%99%B6%E4%BB%98%E3%81%8D%E3%81%AEesp32%E9%96%8B%E7%99%BA%E3%83%9C%E3%83%BC%E3%83%89makepython-esp32-color-lcd/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/makepython-esp32-cover.jpg"&gt;この記事はMakerfabsの提供でお届けします。
今回紹介するMakePython ESP32 Color LCDはMakerfabsから提供いただいたものです。
（ですが、MakePython ESP32 Color LCDはMakerfabsをレビューしたい！と言ったのは自分なので、Makerfabsが無理やりこの商品を押しているわけではなく、inajobの一押しアイテム！、という感じです。）
MakePython ESP32 Color LCDとは ESP32とディスプレイを搭載した開発ボードです。
 1.3インチディスプレイ 解像度240*240 ESP32-WROOM または ESP32-WROVER USBシリアル変換IC CP2104 Mirco USB端子  開発にはMicroPythonや、Arduinoを利用することが出来ます。
まぁESP32を搭載した開発ボードであればどれでもこれらの開発環境は利用できます。
MicroPythonで開発してみる 公式のドキュメントではuPyCraftを使う例が紹介されているので、それに従ってみます。 MicroPythonの開発環境はほかにもたくさんあるので、どれを使ってもよいと思います。
ファームウェアの書き込み 購入時のMakePython ESP32 Color LCDのファームウェアは謎のファームウェアが書き込まれているのですが、どうもMicroPythonではないようだったので、ファームウェアの書き込みから実施する必要がありました。
MicroPythonのファームウェアはここから入手しました。
これを焼きこむと・・
うごいた！
サンプルプログラムの実行 公式ページで紹介されているGitHubのプロジェクトからサンプルプログラムを取得して実行してみます。
ファイルの一覧はこちら https://github.com/Makerfabs/Makerfabs-MakePython-ESP32-Color-LCD/tree/master/workSpace
以下のファイルをすべて書き込んでColor_LCD_test01.pyを実行するとサンプルプログラムが実行できます。
 italicc.py romans.py st7789.py Color_LCD_test01.py  左カラムのdevice以下のファイルがボードに書き込まれたファイルです。
時々このリストの更新に失敗することがあり、何度かUSBケーブルを抜き差ししているとうまくいきました。 （uPyCraftのバグ？）
MicroPythonで独自のプログラムを書いてみる サンプルで利用している液晶ディスプレイ用のライブラリを利用して、独自のプログラムを実行してみます。
サンプルには線画用のフォントデータしかないので、ビットマップフォントのデータを用意して私のIDの「INA」を表示してみました。
MicroPythonで愚直に書くとアニメーションなどの処理は少し遅いようでした。
まぁアニメーションのような速度が必要な処理はネイティブで書くのが良いのでしょう。
MicroPythonで描画。
のんびりだねー pic.twitter.com/57m6w2f4eP
&amp;mdash; ina_ani@2歳児のパパ (@ina_ani) October 9, 2022  上のMicroPythonで作ったものと同じようなプログラムをArduinoで作ったものがこちら。さすがにネイティブなので早いですね。
Arduinoで描画、流石にネイティブだとこのくらい早い pic.twitter.com/EqvCXFlEX5</description>
    </item>
    
    <item>
      <title>ESP32で作られたグラフ電卓</title>
      <link>https://inajob.github.io/iroiro-review/post/esp32%E3%81%A7%E4%BD%9C%E3%82%89%E3%82%8C%E3%81%9F%E3%82%B0%E3%83%A9%E3%83%95%E9%9B%BB%E5%8D%93/</link>
      <pubDate>Sun, 25 Sep 2022 23:42:02 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/esp32%E3%81%A7%E4%BD%9C%E3%82%89%E3%82%8C%E3%81%9F%E3%82%B0%E3%83%A9%E3%83%95%E9%9B%BB%E5%8D%93/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/ESP32で作られたグラフ電卓.jpg"&gt;2022 Cyberdeck Contest: The Galdeano Is More Than A Graphing Calculatorから発見。画像もここから転載。
電卓といえばシンプルな四則演算ができるものを想像しますが、高性能なものになると複雑な関数やグラフを描画できるようなものもあります。
この記事で紹介しているのはESP32を使った自作のグラフ電卓です。
グラフ表示のソフトウェアから、3Dプリンタ製の筐体まですべて自作されています。
確かにESP32の性能があればこれくらいのガジェットは自作可能ですが、なかなか思いついても実現するのは大変そうです。
 </description>
    </item>
    
  </channel>
</rss>

