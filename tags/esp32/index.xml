<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ESP32 on inajobのいろいろレビュー</title>
    <link>https://inajob.github.io/iroiro-review/tags/esp32/</link>
    <description>Recent content in ESP32 on inajobのいろいろレビュー</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Tue, 08 Aug 2023 23:56:05 +0000</lastBuildDate>
    
	<atom:link href="https://inajob.github.io/iroiro-review/tags/esp32/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ESP32をコアとしたオープンソースのスマートフォン</title>
      <link>https://inajob.github.io/iroiro-review/post/esp32%E3%82%92%E3%82%B3%E3%82%A2%E3%81%A8%E3%81%97%E3%81%9F%E3%82%AA%E3%83%BC%E3%83%97%E3%83%B3%E3%82%BD%E3%83%BC%E3%82%B9%E3%81%AE%E3%82%B9%E3%83%9E%E3%83%BC%E3%83%88%E3%83%95%E3%82%A9%E3%83%B3/</link>
      <pubDate>Tue, 08 Aug 2023 23:56:05 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/esp32%E3%82%92%E3%82%B3%E3%82%A2%E3%81%A8%E3%81%97%E3%81%9F%E3%82%AA%E3%83%BC%E3%83%97%E3%83%B3%E3%82%BD%E3%83%BC%E3%82%B9%E3%81%AE%E3%82%B9%E3%83%9E%E3%83%BC%E3%83%88%E3%83%95%E3%82%A9%E3%83%B3/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/ESP32をコアとしたオープンソースのスマートフォン.jpg"&gt;Open-Source Cell Phone Based On ESP32から発見。画像もここから転載。
ESP32をコアとしたオープンソースのスマートフォンの作例です。
3Dプリンタを活用した筐体もコンパクトで美しく、魅力的です。 電話はSIM800L GSMモジュールを搭載し実現しています。 すべてのデータはオープンソース化されているので、真似して作ることもできそうです。（GSMモジュールは日本の携帯電話網では使うことができないので注意が必要です。）</description>
    </item>
    
    <item>
      <title>ESP32をコアとしたArduino公式の開発ボード</title>
      <link>https://inajob.github.io/iroiro-review/post/esp32%E3%82%92%E3%82%B3%E3%82%A2%E3%81%A8%E3%81%97%E3%81%9Farduino%E5%85%AC%E5%BC%8F%E3%81%AE%E9%96%8B%E7%99%BA%E3%83%9C%E3%83%BC%E3%83%89/</link>
      <pubDate>Thu, 27 Jul 2023 23:05:54 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/esp32%E3%82%92%E3%82%B3%E3%82%A2%E3%81%A8%E3%81%97%E3%81%9Farduino%E5%85%AC%E5%BC%8F%E3%81%AE%E9%96%8B%E7%99%BA%E3%83%9C%E3%83%BC%E3%83%89/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/ESP32をコアとしたArduino公式の開発ボード.jpg"&gt;Nano ESP32から発見。画像もここから転載。
Arduino公式からESP32-S3をコアとしたArduino Nanoフォームファクタの開発ボードが出ました。
まだ日本の技適を取得している様子はないので、すぐに試すのは難しそうですが、ESP32をコアとしたソフトウェアとしてのArduinoはすでに十分に普及しているので、使い勝手はなんとなく想像がつきます。
USBコネクタがType-Cだったり、端面スルーホールになっていたりと、痒い所に手が届く設計になっています。</description>
    </item>
    
    <item>
      <title>ESP32-S3でLinuxがブートするらしい</title>
      <link>https://inajob.github.io/iroiro-review/post/esp32-s3%E3%81%A7linux%E3%81%8C%E3%83%96%E3%83%BC%E3%83%88%E3%81%99%E3%82%8B%E3%82%89%E3%81%97%E3%81%84/</link>
      <pubDate>Thu, 06 Jul 2023 23:59:06 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/esp32-s3%E3%81%A7linux%E3%81%8C%E3%83%96%E3%83%BC%E3%83%88%E3%81%99%E3%82%8B%E3%82%89%E3%81%97%E3%81%84/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/ESP32-S3でLinuxがブートするらしい.jpg"&gt;Running Linux with kernel 6.3 on Open Source Hardware board with ESP32-S3!から発見。画像もここから転載。
ESP32-S3でLinuxがブートするらしい。 過去にした記事ではESP32上でRISC-Vなどのエミュレーションをするタイプのものでしたが、この記事では、直接ESP32のコンパイラを使ってLinuxをビルドしています。
ESP32-S3にMMUはついていないので、Buildrootを使ってMMUなしで構成しているように見えます。 ESP32-S3のような安価な組み込みチップでLinuxが動くと、色々と応用が利きそうです。</description>
    </item>
    
    <item>
      <title>3Dプリンタ製の雨量計</title>
      <link>https://inajob.github.io/iroiro-review/post/3d%E3%83%97%E3%83%AA%E3%83%B3%E3%82%BF%E8%A3%BD%E3%81%AE%E9%9B%A8%E9%87%8F%E8%A8%88/</link>
      <pubDate>Sun, 25 Jun 2023 23:31:15 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/3d%E3%83%97%E3%83%AA%E3%83%B3%E3%82%BF%E8%A3%BD%E3%81%AE%E9%9B%A8%E9%87%8F%E8%A8%88/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/3Dプリンタ製の雨量計.jpg"&gt;DIY 3D Printed Rain Gauge Connects To Home Assistantから発見。画像もここから転載。
3Dプリンタ製の雨量計です。 ししおどしのような仕組みで、定期的にマイコンをスリープから解除する仕組みによりバッテリーを長寿命化しています （単三電池4本で1年持つ計算のようです）
コアとなるマイコンはESP32でESPHomeでプログラムを作っているようです
 </description>
    </item>
    
    <item>
      <title>ESP32にしては細い形の開発ボード</title>
      <link>https://inajob.github.io/iroiro-review/post/esp32%E3%81%AB%E3%81%97%E3%81%A6%E3%81%AF%E7%B4%B0%E3%81%84%E5%BD%A2%E3%81%AE%E9%96%8B%E7%99%BA%E3%83%9C%E3%83%BC%E3%83%89/</link>
      <pubDate>Mon, 19 Jun 2023 23:06:14 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/esp32%E3%81%AB%E3%81%97%E3%81%A6%E3%81%AF%E7%B4%B0%E3%81%84%E5%BD%A2%E3%81%AE%E9%96%8B%E7%99%BA%E3%83%9C%E3%83%BC%E3%83%89/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/ESP32にしては細い形の開発ボード.jpg"&gt;Esp32-S3-Pill by KusTech on Tindieから発見。画像もここから転載。
ESP32-WROOMのパッケージは横幅が結構あるので、開発ボードも横幅が広いものがほとんどです。 これにより、ブレッドボードに挿したときにジャンパを指すところがないなどの問題が起きたりします。
人によっては間隔を開けて2つのブレッドボードを並べるような人もいるようですが、ここで紹介している開発ボードは、一般的なBluePillボードと同じ間隔の細い形をしたものです。
みたままですが、ESP32モジュールを開発ボードの後ろに配置することで、開発ボードの横幅を小さく保っています。
USB端子もType-Cとなっており、かなり使いやすそうです。</description>
    </item>
    
    <item>
      <title>薄くフチなしの筐体が印象的な電子ペーパー天気表示機</title>
      <link>https://inajob.github.io/iroiro-review/post/%E8%96%84%E3%81%8F%E3%83%95%E3%83%81%E3%81%AA%E3%81%97%E3%81%AE%E7%AD%90%E4%BD%93%E3%81%8C%E5%8D%B0%E8%B1%A1%E7%9A%84%E3%81%AA%E9%9B%BB%E5%AD%90%E3%83%9A%E3%83%BC%E3%83%91%E3%83%BC%E5%A4%A9%E6%B0%97%E8%A1%A8%E7%A4%BA%E6%A9%9F/</link>
      <pubDate>Thu, 11 May 2023 23:31:59 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E8%96%84%E3%81%8F%E3%83%95%E3%83%81%E3%81%AA%E3%81%97%E3%81%AE%E7%AD%90%E4%BD%93%E3%81%8C%E5%8D%B0%E8%B1%A1%E7%9A%84%E3%81%AA%E9%9B%BB%E5%AD%90%E3%83%9A%E3%83%BC%E3%83%91%E3%83%BC%E5%A4%A9%E6%B0%97%E8%A1%A8%E7%A4%BA%E6%A9%9F/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/薄くフチなしの筐体が印象的な電子ペーパー天気表示機.jpg"&gt;ESP32 E-Paper Weather Displayから発見。画像もここから転載。
薄くフチなしの筐体が印象的な電子ペーパー天気表示機です。 電子ペーパーを使ったサイネージの作例は数多くありますが、この作例は、思い切ったデザインが印象的です。
制御ははESP32で行っており、LiPoバッテリーを電源として動作します。</description>
    </item>
    
    <item>
      <title>ESP32搭載のDIY時計ガジェットキット</title>
      <link>https://inajob.github.io/iroiro-review/post/esp32%E6%90%AD%E8%BC%89%E3%81%AEdiy%E6%99%82%E8%A8%88%E3%82%AC%E3%82%B8%E3%82%A7%E3%83%83%E3%83%88%E3%82%AD%E3%83%83%E3%83%88/</link>
      <pubDate>Tue, 09 May 2023 22:51:42 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/esp32%E6%90%AD%E8%BC%89%E3%81%AEdiy%E6%99%82%E8%A8%88%E3%82%AC%E3%82%B8%E3%82%A7%E3%83%83%E3%83%88%E3%82%AD%E3%83%83%E3%83%88/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/diy-esp32-smartclock-kit-cover.jpg"&gt;この記事はMakerfabsの提供でお届けします。
今回紹介するDIY ESP32 SmartClock KitはMakerfabsから提供いただいたものです。
（ですが、DIY ESP32 SmartClock KitはMakerfabsをレビューしたい！と言ったのは自分なので、Makerfabsが無理やりこの商品を押しているわけではなく、inajobの一押しアイテム！、という感じです。）
DIY ESP32 SmartClock KitはESP32をコアとしたシンプルなスマート時計ガジェットのDIYキットです。
仕様 仕様は以下の通り
 1.44inch 128x128カラーTFT液晶  コントローラはST7735   ESP32-WROOM-32  技適がついているものなので、日本でも安心して利用できます   3.3Vレギュレーター SPX3819 Micro USBポート USBシリアル変換IC CP2104  自動リセット回路  トランジスタはS8050     LiPo充電IC MCP73831 操作用タクトスイッチ 3個 リセットスイッチ、書き込みスイッチ ブザー 450mAhのLiPoバッテリー  LiPoバッテリーについては、私の場合は、税関で没収されてしまいました、残念・・
製品に組み込まれたLiPoバッテリーは問題ないのですが、このようにDIYキットでむき出しのLiPoバッテリーが含まれている場合は、容量がそこまで多くなくても没収の対象となることがあるようです。
まぁLiPoバッテリーがなくてもUSB給電で動作を確認することができるので、今回はそのようにしました。
DIYキットということで、多くの部品は未実装の状態ですが、表面実装の部品については予めはんだ付けされた状態なので、組立作業はそこまで大変ではありません。
組み立て 部品表に従って、パーツをはんだ付けしていきます。背の低い部品から実装することで、はんだ付け前のパーツが落下することを防ぐことが出来ます。 このあたりのTipsは説明書のPDFにも記載されています。
自分は、抵抗、セッラミックコンデンサ、電解コンデンサの順に実装しました。 はんだ付け後、ニッパーで余った導線を切断して、実装完了です。
スペーサーとネジを使って、アクリルプレートを取り付けます。
六角形のスペーサーは液晶モジュールと近すぎて、向きによっては干渉してしまうようだったので、向きを合わせた上で、やや強引に固定しました。
動作確認 USBケーブルを差し込んで、電源スイッチをONにすると、液晶に文字が現れます。 指示に従いS1ボタンを3秒間長押しすることで、WiFiのAPモードが起動します。 パソコンなどでMakerfabs_apというSSIDのWiFiに接続し、Webブラウザから192.168.4.1にアクセスすることで、SSIDとパスフレーズを入力する画面が表示されます。
この設定が完了するとNTP経由で時計を合わせてくれます。
時計が起動した後はS1ボタンでアラーム時間を設定し、S3ボタンでアラームのON/OFFを制御できます。 さらにS1ボタンを押すとタイムゾーンも設定できます。
説明書によると更にS1ボタンを押すことで天気の情報を取得できるようでしたが、手元ではうまく動きませんでした。（これは、このガジェットが天気参照のためにアクセスしているWebサービスが停止してしまっていることが原因のようです）
Arduinoによる動作のカスタマイズ ここまで紹介してきたように、このガジェットはインターネットで時刻合わせが行われる時計、として使えますが、USB経由でプログラムを書き換えることで自由に動作を変更出来ます。 極論を言えば時計ではなく、デジタルフォトフレームのようなものや、ゲームのようなものも動作させることが出来ます。</description>
    </item>
    
    <item>
      <title>128x64のOLEDが2画面搭載されたスマートウォッチ</title>
      <link>https://inajob.github.io/iroiro-review/post/128x64%E3%81%AEoled%E3%81%8C2%E7%94%BB%E9%9D%A2%E6%90%AD%E8%BC%89%E3%81%95%E3%82%8C%E3%81%9F%E3%82%B9%E3%83%9E%E3%83%BC%E3%83%88%E3%82%A6%E3%82%A9%E3%83%83%E3%83%81/</link>
      <pubDate>Sun, 23 Apr 2023 23:16:58 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/128x64%E3%81%AEoled%E3%81%8C2%E7%94%BB%E9%9D%A2%E6%90%AD%E8%BC%89%E3%81%95%E3%82%8C%E3%81%9F%E3%82%B9%E3%83%9E%E3%83%BC%E3%83%88%E3%82%A6%E3%82%A9%E3%83%83%E3%83%81/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/128x64のOLEDが2画面搭載されたスマートウォッチ.jpg"&gt;ESP32 Dual-screen watch V2から発見。画像もここから転載。
AliExpressなどを探すと128x64の小型のOLEDを見つけられますが、用途によっては少し小さすぎます。 この記事で紹介しているスマートウォッチは、このOLEDを2枚並べてこの問題を解決しています。
コアとなるマイコンモジュールはXIAO ESP32C3です。</description>
    </item>
    
    <item>
      <title>14セグメント24桁のディスプレイ</title>
      <link>https://inajob.github.io/iroiro-review/post/24%E3%82%BB%E3%82%B0%E3%83%A1%E3%83%B3%E3%83%8812%E6%A1%81%E3%81%AE%E3%83%87%E3%82%A3%E3%82%B9%E3%83%97%E3%83%AC%E3%82%A4/</link>
      <pubDate>Tue, 11 Apr 2023 00:01:52 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/24%E3%82%BB%E3%82%B0%E3%83%A1%E3%83%B3%E3%83%8812%E6%A1%81%E3%81%AE%E3%83%87%E3%82%A3%E3%82%B9%E3%83%97%E3%83%AC%E3%82%A4/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/24セグメント12桁のディスプレイ.jpg"&gt;S14Clock LED Word Clock Kit (24 Characters) by Store139 on Tindieから発見。画像もここから転載。
14セグメント24桁のディスプレイです。(12桁のものもあるようです。) 制御はESP32 S2 Miniで、もちろんWiFi経由で設定が出来ます。
これだけセグメントがあるとアルファベットを表示することが出来るので、様々な情報の表示機として活用できそうです。
表示の切り替えエフェクトなど、細かい作りこみがされており、このガジェットだけでかなりのことが出来そうです。
 </description>
    </item>
    
    <item>
      <title>今日の予定を表示してくれる電子ペーパガジェット</title>
      <link>https://inajob.github.io/iroiro-review/post/%E4%BB%8A%E6%97%A5%E3%81%AE%E4%BA%88%E5%AE%9A%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%97%E3%81%A6%E3%81%8F%E3%82%8C%E3%82%8B%E9%9B%BB%E5%AD%90%E3%83%9A%E3%83%BC%E3%83%91%E3%82%AC%E3%82%B8%E3%82%A7%E3%83%83%E3%83%88/</link>
      <pubDate>Sun, 26 Mar 2023 23:42:06 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E4%BB%8A%E6%97%A5%E3%81%AE%E4%BA%88%E5%AE%9A%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%97%E3%81%A6%E3%81%8F%E3%82%8C%E3%82%8B%E9%9B%BB%E5%AD%90%E3%83%9A%E3%83%BC%E3%83%91%E3%82%AC%E3%82%B8%E3%82%A7%E3%83%83%E3%83%88/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/今日の予定を表示してくれる電子ペーパガジェット.jpg"&gt;The Timeframeから発見。画像もここから転載。
今日の予定を表示してくれる電子ペーパガジェットを紹介します。
このガジェットはLilyGo T5というものですが、ESP32と電子ペーパーモジュールがあれば似たものを作れそうです。
仕組みとしては、サーバにある画像を表示するプログラムをESP32に仕込んでおき、スケジュールの画像はサーバで生成しているようです。（Google Clendarの画面をSeleniumでキャプチャしただけのようです）
この方式だと、ESP32側はシンプルなプログラムでよく、かつサーバ側の実装を差し替えることで、あらゆる画像を表示できます。</description>
    </item>
    
  </channel>
</rss>

