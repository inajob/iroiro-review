<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on inajobのいろいろレビュー</title>
    <link>https://inajob.github.io/iroiro-review/post/</link>
    <description>Recent content in Posts on inajobのいろいろレビュー</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Mon, 14 Mar 2022 22:33:30 +0000</lastBuildDate>
    
	<atom:link href="https://inajob.github.io/iroiro-review/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>よく網羅された携帯インディーズゲーム機の一覧</title>
      <link>https://inajob.github.io/iroiro-review/post/%E3%82%88%E3%81%8F%E7%B6%B2%E7%BE%85%E3%81%95%E3%82%8C%E3%81%9F%E6%90%BA%E5%B8%AF%E3%82%A4%E3%83%B3%E3%83%87%E3%82%A3%E3%83%BC%E3%82%BA%E3%82%B2%E3%83%BC%E3%83%A0%E6%A9%9F%E3%81%AE%E4%B8%80%E8%A6%A7/</link>
      <pubDate>Mon, 14 Mar 2022 22:33:30 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E3%82%88%E3%81%8F%E7%B6%B2%E7%BE%85%E3%81%95%E3%82%8C%E3%81%9F%E6%90%BA%E5%B8%AF%E3%82%A4%E3%83%B3%E3%83%87%E3%82%A3%E3%83%BC%E3%82%BA%E3%82%B2%E3%83%BC%E3%83%A0%E6%A9%9F%E3%81%AE%E4%B8%80%E8%A6%A7/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/よく網羅された携帯インディーズゲーム機の一覧.jpg"&gt;oshaboy/awesome-indie-handheldsから発見。画像もここから転載。
ここ数年インディーズ携帯ゲーム機が盛り上がっています。 よく似たスペックのものが多いのですが、それぞれ個性があって面白いです。
この記事ではインディーズ携帯ゲーム機の一覧をスペックを含めて一覧しています。 オリジナル携帯ゲーム機を作る際の参考にもなりそうです。</description>
    </item>
    
    <item>
      <title>電子工作のエンクロージャを作る事に特化したOpenSCADのプロジェクト</title>
      <link>https://inajob.github.io/iroiro-review/post/%E9%9B%BB%E5%AD%90%E5%B7%A5%E4%BD%9C%E3%81%AE%E3%82%A8%E3%83%B3%E3%82%AF%E3%83%AD%E3%83%BC%E3%82%B8%E3%83%A3%E3%82%92%E4%BD%9C%E3%82%8B%E4%BA%8B%E3%81%AB%E7%89%B9%E5%8C%96%E3%81%97%E3%81%9Fopenscad%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88/</link>
      <pubDate>Sun, 13 Mar 2022 23:35:11 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E9%9B%BB%E5%AD%90%E5%B7%A5%E4%BD%9C%E3%81%AE%E3%82%A8%E3%83%B3%E3%82%AF%E3%83%AD%E3%83%BC%E3%82%B8%E3%83%A3%E3%82%92%E4%BD%9C%E3%82%8B%E4%BA%8B%E3%81%AB%E7%89%B9%E5%8C%96%E3%81%97%E3%81%9Fopenscad%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/電子工作のエンクロージャを作る事に特化したOpenSCADのプロジェクト.jpg"&gt;This Parametric Project Box Generator Is Super Easyから発見。画像もここから転載。
電子工作のエンクロージャを作る事に特化したOpenSCADのプロジェクト。 基板取り付け穴や端子を露出するための窓、インサートナット用の穴など、よくある構造がライブラリ化されており便利そうです。</description>
    </item>
    
    <item>
      <title>周りに人がいる時だけ閉じるマスク</title>
      <link>https://inajob.github.io/iroiro-review/post/%E5%91%A8%E3%82%8A%E3%81%AB%E4%BA%BA%E3%81%8C%E3%81%84%E3%82%8B%E6%99%82%E3%81%A0%E3%81%91%E9%96%89%E3%81%98%E3%82%8B%E3%83%9E%E3%82%B9%E3%82%AF/</link>
      <pubDate>Thu, 10 Mar 2022 23:30:16 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E5%91%A8%E3%82%8A%E3%81%AB%E4%BA%BA%E3%81%8C%E3%81%84%E3%82%8B%E6%99%82%E3%81%A0%E3%81%91%E9%96%89%E3%81%98%E3%82%8B%E3%83%9E%E3%82%B9%E3%82%AF/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/auto-shy-mask.jpg"&gt;Shy Mask That Shuts Up When It Sees Peopleから発見。画像もここから転載（CC BY-NC-SA bý Friedlc）。
コロナの影響で外出時はマスクをつけるというのが常識になりつつありますが、よく考えてみると、周りに人がいない状態の時はマスクをつける必要な無いように思います。
この記事ではそんなアイデアを基に、人が周りにいる時だけマスクをかけるというガジェットを自作しています。
人のセンシングには焦電センサーを用い、Arduinoでセンサーの値を読み取り、サーボモーターを動かして、マスクの開閉を行っています。
焦電センサーは自身が止まっているときはうまく動くようですが、歩いていたりすると誤検知が多いようです。 しかし、このアイデア自体は非常に面白いです。
 </description>
    </item>
    
    <item>
      <title>ESP32で電波時計を合わせるテクニック</title>
      <link>https://inajob.github.io/iroiro-review/post/esp32%E3%81%A7%E9%9B%BB%E6%B3%A2%E6%99%82%E8%A8%88%E3%82%92%E5%90%88%E3%82%8F%E3%81%9B%E3%82%8B%E3%83%86%E3%82%AF%E3%83%8B%E3%83%83%E3%82%AF/</link>
      <pubDate>Wed, 09 Mar 2022 23:00:00 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/esp32%E3%81%A7%E9%9B%BB%E6%B3%A2%E6%99%82%E8%A8%88%E3%82%92%E5%90%88%E3%82%8F%E3%81%9B%E3%82%8B%E3%83%86%E3%82%AF%E3%83%8B%E3%83%83%E3%82%AF/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/ESP32で電波時計を合わせるテクニック.jpg"&gt;ESP32 (M5Stick-C) で電波時計を合わせようから発見。画像もここから転載。
電波時計は時刻を勝手に合わせてくれて便利ですが、電波をうまく拾えない環境や、天災やメンテナンスによる標準電波の停波などにより、うまく時刻が合わせられないことがあります。
この記事では、M5Stick-Cをつかって簡単に標準電波を発生させる手法が紹介されています。 アンテナが必要か、、と思いきや、電波時計にかなり近づけることでアンテナすら不要で電波時計の時計を合わせることができるようです。
このテクニックを使えば、電波時計を改造することなく好きな時刻に設定できる時計ガジェットも作ることができそうです。</description>
    </item>
    
    <item>
      <title>2本目にいかが？ワイヤレスバッテリーはんだごて</title>
      <link>https://inajob.github.io/iroiro-review/post/2%E6%9C%AC%E7%9B%AE%E3%81%AB%E3%81%84%E3%81%8B%E3%81%8C%E3%83%AF%E3%82%A4%E3%83%A4%E3%83%AC%E3%82%B9%E3%83%90%E3%83%83%E3%83%86%E3%83%AA%E3%83%BC%E3%81%AF%E3%82%93%E3%81%A0%E3%81%94%E3%81%A6/</link>
      <pubDate>Mon, 07 Mar 2022 12:40:26 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/2%E6%9C%AC%E7%9B%AE%E3%81%AB%E3%81%84%E3%81%8B%E3%81%8C%E3%83%AF%E3%82%A4%E3%83%A4%E3%83%AC%E3%82%B9%E3%83%90%E3%83%83%E3%83%86%E3%83%AA%E3%83%BC%E3%81%AF%E3%82%93%E3%81%A0%E3%81%94%E3%81%A6/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/wireless-battery-iron-cover.jpg"&gt;どこでもはんだ付けできるワイヤレスバッテリーはんだごて
ワイヤレスバッテリーはんだごて
この記事はBanggoodの提供でお届けします。
以前紹介したようにこのブログはBanggoodと提携させていただいており、今回紹介するワイヤレスバッテリーはんだごても、Banggoodからいただいたものとなります。（ワイヤレスバッテリーはんだごてのレビューがしたい！と言ったのは自分なので、Banggoodが無理やりこの商品を押しているわけではなく、inajobの一押しアイテム！、という感じです。）
「ワイヤレスバッテリーはんだごて」とは はんだごて、というと普通は、コンセントが付いた優先のものが一般的です。
しかし、移動できない機械の修理や、大きなガジェットなどに対してはんだごてを使う際、ケーブルが邪魔になる事があります。
そんな時に役立つのがこの ワイヤレスバッテリーはんだごてです。
USBケーブルで充電ができ、内蔵のバッテリーに貯めた電力によりワイヤレスで動作します。
バッテリー容量は2600mAhです。
小手先も3種類も同梱されています。
全ての付属物を入れることが出来るいい感じのケースも付いています。
不思議な形をしていますが、ねじの部分を回しとると中には18650型のバッテリーが入っていました。
使い方 電源を入れるためには、スイッチを2秒以内に5回素早く押します。ちょっと不思議な動作ですが、誤って電源が入らないためにはこのくらいの操作が良いのかもしれません。
電源ボタンを長押しすることではんだごてが過熱され、離すと動作が停止します。
ハンダゴテをが適温に加熱するためにはある程度の時間電源ボタンを押す必要がありますが、10秒以上押し続けると電源が切れてしまいます。7～8秒押し続ける事を何度か繰り返して必要な温度まで加熱させます。
手元で試したところ30Wに設定したうえで7秒の過熱を3回ほど行うとはんだがとけるくらいの温度になりました。
+,-ボタンによりどの程度の電力を与えるかを調節することができます（マニュアルによると15-30Wがおすすめのようです）
まとめ はんだ付けする間にこまめに電源ボタンを押して、加熱する必要があるので普通のはんだごてより面倒な感じでした。
しかし、モバイルではんだ付けするという目的においては、誤って電源が入ってしまわないこの設計は理にかなっているように感じました。
普通のはんだごてを持っている方で、電源コードが邪魔でうまくはんだ付けができないという課題をお持ちの方はポータブル用として買ってみるのも良いと思いました。
自分はこれで3Dプリンタのリミットスイッチのハンダが浮いていたのを直しました。
 ワイヤレスはんだごて の購入はこちら  追記: じつはこれ、電子タバコのモジュールだった？ 昨日記事を公開したところ、何人かの方から、「電子タバコ」と酷似している。 と教えていただきました。
pico！？picoじゃないか！？ https://t.co/ZPmBr8148l
&amp;mdash; もち村💛ONAJ (@motchy2k) March 8, 2022  なるほ・・・ど？
Vape民には本体がどう見ても入門用の某テクニカルMODにしか見えない😇 https://t.co/ntWWRkdRBG
&amp;mdash; 朝槻 彩羽 a.k.a. 楓 (@kaede_asatsuki) March 8, 2022  Vape じゃん… https://t.co/mFqfZiO7gq
&amp;mdash; シメイ (@chimay_rovering) March 8, 2022  例えばこれ
 そしてついに、Banggoodで小手先だけ販売しているのを発見しました。
このネジの部分は 510と呼ばれる規格のようで、これに準拠している電子タバコであれば、この小手先をつけることではんだごてとして利用できるかもしれません。</description>
    </item>
    
    <item>
      <title>3Dプリンタのフィラメントが送れない状態を検知するデバイス</title>
      <link>https://inajob.github.io/iroiro-review/post/3d%E3%83%97%E3%83%AA%E3%83%B3%E3%82%BF%E3%81%AE%E3%83%95%E3%82%A3%E3%83%A9%E3%83%A1%E3%83%B3%E3%83%88%E3%81%8C%E9%80%81%E3%82%8C%E3%81%AA%E3%81%84%E7%8A%B6%E6%85%8B%E3%82%92%E6%A4%9C%E7%9F%A5%E3%81%99%E3%82%8B%E3%83%87%E3%83%90%E3%82%A4%E3%82%B9/</link>
      <pubDate>Sun, 06 Mar 2022 21:00:00 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/3d%E3%83%97%E3%83%AA%E3%83%B3%E3%82%BF%E3%81%AE%E3%83%95%E3%82%A3%E3%83%A9%E3%83%A1%E3%83%B3%E3%83%88%E3%81%8C%E9%80%81%E3%82%8C%E3%81%AA%E3%81%84%E7%8A%B6%E6%85%8B%E3%82%92%E6%A4%9C%E7%9F%A5%E3%81%99%E3%82%8B%E3%83%87%E3%83%90%E3%82%A4%E3%82%B9/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/clogg-detector.jpg"&gt;3D Printer Clog Detectorから発見。画像もここから転載。
3Dプリンタを使っていると様々なトラブルが起きます。
そのうちの1つに「フィラメントが送れない」という問題があります。
ノズルが詰まったり、フィラメントが途中で折れたり、フィラメントが無くなったりと、原因は様々ですが、安い3Dプリンタではこれを検知せずに印刷を続けてしまうため、意図した造形物が作られなくなってしまいます。
フィラメントが送れなくなったら、とにかく早めにそれに気づき3Dプリンタを止めて、問題を解消したいものです。
このページで紹介しているのはフィラメントが送れない問題を検知するための小さなガジェットです。
このガジェット自体も3Dプリンタで作られており、仕組みは単純です。
フィラメントをギアではさみ送られると回転する機構を用意し、この回転をマイコンで取得し、意図しないタイミングで回転が止まった場合にブザーがなるようになっています。
</description>
    </item>
    
    <item>
      <title>今日の分の薬を用意してくれる装置</title>
      <link>https://inajob.github.io/iroiro-review/post/%E4%BB%8A%E6%97%A5%E3%81%AE%E5%88%86%E3%81%AE%E8%96%AC%E3%82%92%E7%94%A8%E6%84%8F%E3%81%97%E3%81%A6%E3%81%8F%E3%82%8C%E3%82%8B%E8%A3%85%E7%BD%AE/</link>
      <pubDate>Fri, 04 Mar 2022 00:00:18 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E4%BB%8A%E6%97%A5%E3%81%AE%E5%88%86%E3%81%AE%E8%96%AC%E3%82%92%E7%94%A8%E6%84%8F%E3%81%97%E3%81%A6%E3%81%8F%E3%82%8C%E3%82%8B%E8%A3%85%E7%BD%AE/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/pill-dispenser.jpg"&gt;Smart Pill Dispenserから発見。画像もここから転載(CC BY-NC-SA by danielleguli)。
薬を服用していると、「あれ？今日のんだっけ？」となる事がよくあります。
高齢者となるとそれも顕著なようで、今日必要な薬を正しく提示するための様々な製品があります。
この記事で紹介しているのは、ハイテクだけど素朴な、薬供給機です。
引き出しの上にある管に薬を入れて置き、定時になったらサーボモータが回転し、薬を1つずつ落とします。
これにより、引き出しを開けると中には必要な分の薬が入っています。
工作は雑ですが、仕組みが非常にわかりやすく、面白い作例です。
</description>
    </item>
    
    <item>
      <title>FDM式3Dプリンタでリフロー用ステンシルを作る</title>
      <link>https://inajob.github.io/iroiro-review/post/fdm%E5%BC%8F3d%E3%83%97%E3%83%AA%E3%83%B3%E3%82%BF%E3%81%A7%E3%83%AA%E3%83%95%E3%83%AD%E3%83%BC%E7%94%A8%E3%82%B9%E3%83%86%E3%83%B3%E3%82%B7%E3%83%AB%E3%82%92%E4%BD%9C%E3%82%8B/</link>
      <pubDate>Wed, 02 Mar 2022 13:00:00 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/fdm%E5%BC%8F3d%E3%83%97%E3%83%AA%E3%83%B3%E3%82%BF%E3%81%A7%E3%83%AA%E3%83%95%E3%83%AD%E3%83%BC%E7%94%A8%E3%82%B9%E3%83%86%E3%83%B3%E3%82%B7%E3%83%AB%E3%82%92%E4%BD%9C%E3%82%8B/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/FDM式3Dプリンタでリフロー用ステンシルを作る.jpg"&gt;でべさんのTweetから発見。画像もここから転載。
以前光造形式3Dプリンタでリフロー用のステンシルを作る話を紹介しましたが、このTweetは、FDM式3Dプリンタでリフロー用ステンシルを作った事例を紹介しています。
写真を見る限りそれっぽいものが作れており、意外と実用的かもしれません。
とりあえずこんなところでw
結論: 「FDM 式 3Dプリンタで、リフロー用ステンシルぽいのは作れる」
(補足:
SOT-23-5 0.95mm ピッチは0.2mmノズルで。
ESP32 くらいの1.27mmピッチなら、通常の0.4mmノズルでいけました。
Flashforge Finder、PLA+ 使用) pic.twitter.com/sAAWqBYF9L
&amp;mdash; でべ (@devemin) January 27, 2022  </description>
    </item>
    
    <item>
      <title>ESP32を使った省エネの動体検知カメラ</title>
      <link>https://inajob.github.io/iroiro-review/post/esp32%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E7%9C%81%E3%82%A8%E3%83%8D%E3%81%AE%E5%8B%95%E4%BD%93%E6%A4%9C%E7%9F%A5%E3%82%AB%E3%83%A1%E3%83%A9/</link>
      <pubDate>Tue, 01 Mar 2022 13:00:53 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/esp32%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E7%9C%81%E3%82%A8%E3%83%8D%E3%81%AE%E5%8B%95%E4%BD%93%E6%A4%9C%E7%9F%A5%E3%82%AB%E3%83%A1%E3%83%A9/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/power-save-esp32cam.jpg"&gt;ESP32-CAM Low Power Trail Cameraから発見。画像もここから転載。 ESP32はパワフルなマイコンですが、その分消費電力も大きいです。
ディープスリープモードなどもありますが、制御がややこしかったり、それでもある程度は電力を消費してしまいます。 また、当たり前ですがスリープモード中は大した処理が実行できません。
この記事で紹介しているのは、動物が近づいたときに自動的にカメラで撮影するガジェットを省電力で実現する手法です。
具体的には人感センサーを用いて、ESP32の電源を外から制御しています。
一度電源がONになったらESP32が既定の処理が終わるまでは電源がOFFにならないように工夫して設計されています。
この方式は他のマイコンでも有効なので、いろいろと応用がききそうです。</description>
    </item>
    
    <item>
      <title>1輪車のような外観のロボット</title>
      <link>https://inajob.github.io/iroiro-review/post/1%E8%BC%AA%E8%BB%8A%E3%81%AE%E3%82%88%E3%81%86%E3%81%AA%E5%A4%96%E8%A6%B3%E3%81%AE%E3%83%AD%E3%83%9C%E3%83%83%E3%83%88/</link>
      <pubDate>Tue, 01 Mar 2022 00:00:33 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/1%E8%BC%AA%E8%BB%8A%E3%81%AE%E3%82%88%E3%81%86%E3%81%AA%E5%A4%96%E8%A6%B3%E3%81%AE%E3%83%AD%E3%83%9C%E3%83%83%E3%83%88/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/d-o-droid-like.jpg"&gt;BUILDING D-O, THE CONE FACE DROIDから発見。画像もここから転載。
1輪車のような外観の面白いロボットです。
タイヤの部分は2つの駆動輪が並んでおり、自由自在に進むことが出来ます。 首の部分も自在に動き、ロボットでありながら、感情を感じさせるような表現が出来ています。
筐体の大半は3Dプリンタで作られていますが、かなり高い完成度です。
</description>
    </item>
    
  </channel>
</rss>

