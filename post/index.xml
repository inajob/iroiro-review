<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on inajobのいろいろレビュー</title>
    <link>https://inajob.github.io/iroiro-review/post/</link>
    <description>Recent content in Posts on inajobのいろいろレビュー</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Wed, 16 Feb 2022 20:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://inajob.github.io/iroiro-review/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>「菊寄せ」を簡単に実現できるアクリルプレートによる治具</title>
      <link>https://inajob.github.io/iroiro-review/post/%E8%8F%8A%E5%AF%84%E3%81%9B%E3%82%92%E7%B0%A1%E5%8D%98%E3%81%AB%E5%AE%9F%E7%8F%BE%E3%81%A7%E3%81%8D%E3%82%8B%E3%82%A2%E3%82%AF%E3%83%AA%E3%83%AB%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%81%AB%E3%82%88%E3%82%8B%E6%B2%BB%E5%85%B7/</link>
      <pubDate>Wed, 16 Feb 2022 20:00:00 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E8%8F%8A%E5%AF%84%E3%81%9B%E3%82%92%E7%B0%A1%E5%8D%98%E3%81%AB%E5%AE%9F%E7%8F%BE%E3%81%A7%E3%81%8D%E3%82%8B%E3%82%A2%E3%82%AF%E3%83%AA%E3%83%AB%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%81%AB%E3%82%88%E3%82%8B%E6%B2%BB%E5%85%B7/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/「菊寄せ」を簡単に実現できるアクリルプレートによる治具.jpg"&gt;さんた屋さんのTweetから発見。画像もここから転載。
手芸でファスナーテープを角に貼り付ける際の処理に「菊寄せ」という手法があります。 これを技術が必要で、誰でも簡単にできるものではないようです。
このTweetで紹介している「きくよせくん」はアクリル板を加工して、この「菊寄せ」を誰でも簡単に実現できるもののようです。
https://factorysanta.thebase.in/items/57006415 販売もしているようです。
#きくよせくん
ダイジェスト版動画。 pic.twitter.com/FMublLAp3p
&amp;mdash; さんた屋 (@FactorySanta) December 24, 2021   </description>
    </item>
    
    <item>
      <title>アヒル型のコンピュータ</title>
      <link>https://inajob.github.io/iroiro-review/post/%E3%82%A2%E3%83%92%E3%83%AB%E5%9E%8B%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF/</link>
      <pubDate>Tue, 15 Feb 2022 11:00:29 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E3%82%A2%E3%83%92%E3%83%AB%E5%9E%8B%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/cyberduck.jpg"&gt;cyberDÛCK: a CircuitPython Anatidaeから発見。画像もここから転載。
持ち運びできるコンパクトな自作コンピュータはCyberdeckなどと呼ばれ、たくさんの作例がありますが、このプロジェクトはそれをもじったものです。
一般的なCyberdeckとは違い、CircuitPythonが動作するマイコンボードで構成されています。
USBHost用とメインコントローラ用の2つのAdafruit Adafruit ItsyBitsy M4を搭載するというある意味リッチな構成です。（USBHost用は、汎用マイコンではなくUSB HostShieldのようなものでも代替できそうです）
Linuxの動作するSBCとは違い、フットプリントも小さく、電力消費も少なく、即座に起動もできるので、持ち運びできるコンピュータとしては使い勝手が良いかもしれません。
</description>
    </item>
    
    <item>
      <title>ショーウィンドウに飾られたプロッタに通行人がテキストを投稿できる仕組み</title>
      <link>https://inajob.github.io/iroiro-review/post/%E3%82%B7%E3%83%A7%E3%83%BC%E3%82%A6%E3%82%A3%E3%83%B3%E3%83%89%E3%82%A6%E3%81%AB%E9%A3%BE%E3%82%89%E3%82%8C%E3%81%9F%E3%83%97%E3%83%AD%E3%83%83%E3%82%BF%E3%81%AB%E9%80%9A%E8%A1%8C%E4%BA%BA%E3%81%8C%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%82%92%E6%8A%95%E7%A8%BF%E3%81%A7%E3%81%8D%E3%82%8B%E4%BB%95%E7%B5%84%E3%81%BF/</link>
      <pubDate>Mon, 14 Feb 2022 11:30:51 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E3%82%B7%E3%83%A7%E3%83%BC%E3%82%A6%E3%82%A3%E3%83%B3%E3%83%89%E3%82%A6%E3%81%AB%E9%A3%BE%E3%82%89%E3%82%8C%E3%81%9F%E3%83%97%E3%83%AD%E3%83%83%E3%82%BF%E3%81%AB%E9%80%9A%E8%A1%8C%E4%BA%BA%E3%81%8C%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%82%92%E6%8A%95%E7%A8%BF%E3%81%A7%E3%81%8D%E3%82%8B%E4%BB%95%E7%B5%84%E3%81%BF/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/public-plotter.jpg"&gt;Please Leave A Messageから発見。画像もここから転載。
インターネットの世界では「テキストを投稿できる」というのは何でもない仕掛けですが、この記事で紹介しているのは、ショーウインドウの中にあるプロッタに「テキストを投稿できる」というものです。
QRコードにアクセスすると、テキストを投稿できるWebUIが表示され、投稿したテキストは、ESP8266と接続されたペンプロッタにより描画されます。
ペンプロッタには長いロールペーパーがセットされており、過去の履歴もしっかり見ることが出来ます。
</description>
    </item>
    
    <item>
      <title>STCマイコンで作られたオシロスコープ</title>
      <link>https://inajob.github.io/iroiro-review/post/stc%E3%83%9E%E3%82%A4%E3%82%B3%E3%83%B3%E3%81%A7%E4%BD%9C%E3%82%89%E3%82%8C%E3%81%9F%E3%82%AA%E3%82%B7%E3%83%AD%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%97/</link>
      <pubDate>Sun, 13 Feb 2022 23:00:43 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/stc%E3%83%9E%E3%82%A4%E3%82%B3%E3%83%B3%E3%81%A7%E4%BD%9C%E3%82%89%E3%82%8C%E3%81%9F%E3%82%AA%E3%82%B7%E3%83%AD%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%97/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/stc-oscilloscope.jpg"&gt;A SIMPLE MINIATURE DIGITAL STORAGE OSCILLOSCOPE POWERED BY AN STC MCUから発見。画像もここから転載。
小さなデジタルオシロスコープの作例です。
よく見る作例ですが、コアに使われているマイコンがSTCという中国企業のマイコンを使っているところが特徴です。 昨今の半導体不足により、いつも使っているマイコンが足りない！などで、他のマイコンを探している方には、STCマイコンも選択肢に入るかもしれません。
具体的にはSTC8A8K64S4A12 という RAMが8K、ROMが64KというスペックのDIPのICのようです。
</description>
    </item>
    
    <item>
      <title>Arduboyを使ったキーボードマクロ再生装置</title>
      <link>https://inajob.github.io/iroiro-review/post/arduboy%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E3%83%9E%E3%82%AF%E3%83%AD%E5%86%8D%E7%94%9F%E8%A3%85%E7%BD%AE/</link>
      <pubDate>Wed, 09 Feb 2022 22:00:00 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/arduboy%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E3%83%9E%E3%82%AF%E3%83%AD%E5%86%8D%E7%94%9F%E8%A3%85%E7%BD%AE/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/Arduboyを使ったキーボードマクロ再生装置.jpg"&gt;荒miu (三浦 琢) さんのTweetから発見。画像もここから転載。
Arduboyはコンパクトでよくできた携帯ゲーム機ですが、USBキーボードとしても振る舞うことができます。 この作例では、Arduboyの画面に表示されたメニューから項目を選ぶことで、あらかじめ登録しておいたキーストロークを送信しています。
このTweetではゲームのレベル上げなどの単純作業を自動化する例が紹介されています。
全自動たまご割り機。
その場でグルグルできるようにしてみた。キモい。#ダイパリメイク https://t.co/KFp79njd5N pic.twitter.com/MkBJnINaft
&amp;mdash; 荒miu (三浦 琢) (@miu_robo) January 10, 2022  </description>
    </item>
    
    <item>
      <title>CircuitPytonでプログラムされたマクロキーパッド</title>
      <link>https://inajob.github.io/iroiro-review/post/circuitpyton%E3%81%A7%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%81%95%E3%82%8C%E3%81%9F%E3%83%9E%E3%82%AF%E3%83%AD%E3%82%AD%E3%83%BC%E3%83%91%E3%83%83%E3%83%89/</link>
      <pubDate>Tue, 08 Feb 2022 23:00:54 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/circuitpyton%E3%81%A7%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%81%95%E3%82%8C%E3%81%9F%E3%83%9E%E3%82%AF%E3%83%AD%E3%82%AD%E3%83%BC%E3%83%91%E3%83%83%E3%83%89/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/xiao-macro-keyboard.jpeg"&gt;Build a simple USB HID Macropad using Seeeduino Xiao &amp;amp; CircuitPythonから発見。画像もここから転載。
Seeeduino Xiaoを使ったマクロキーパッドの作例です。
Xiaoはパワフルなマイコンなので、CircuitPythonが動作します。
そのためキーボードのソースコードもPythonで書くことが出来、デバッグにもPythonのREPLを使うことが出来るようです。
基板を使わない3Dプリンタ製のエンクロージャもよくできています。</description>
    </item>
    
    <item>
      <title>既存のUSB機器をType-C対応する手法</title>
      <link>https://inajob.github.io/iroiro-review/post/%E6%97%A2%E5%AD%98%E3%81%AEusb%E6%A9%9F%E5%99%A8%E3%82%92type-c%E5%AF%BE%E5%BF%9C%E3%81%99%E3%82%8B%E6%89%8B%E6%B3%95/</link>
      <pubDate>Mon, 07 Feb 2022 23:00:51 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E6%97%A2%E5%AD%98%E3%81%AEusb%E6%A9%9F%E5%99%A8%E3%82%92type-c%E5%AF%BE%E5%BF%9C%E3%81%99%E3%82%8B%E6%89%8B%E6%B3%95/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/usbcconv.jpg"&gt;NEAT AND TIDY USB-C CONVERSIONS FOR LEGACY DEVICESから発見。画像もここから転載。
従来のUSB端子を Type-Cに換装する事例の紹介です。
昨今のノートパソコンや、スマートフォンはUSB Type-C端子しか備えていないものも多く、従来のUSB端子を備えた周辺機器を利用するためには、変換コネクタが必要になります。
そこでこの記事では、既存の周辺機器のコネクタ部分を分解して、コネクタをType-Cに換装する方法を紹介しています。
利用しているのはUSB Type-Cのブレイクアウトボードで、はんだ付けも比較的簡単そうです。
</description>
    </item>
    
    <item>
      <title>ATSAMD21搭載CircuitPythonでゲームが作れる激安携帯ゲーム端末「PewPew Standalone」</title>
      <link>https://inajob.github.io/iroiro-review/post/atsamd21%E6%90%AD%E8%BC%89circuitpython%E3%81%A7%E3%82%B2%E3%83%BC%E3%83%A0%E3%81%8C%E4%BD%9C%E3%82%8C%E3%82%8B%E6%BF%80%E5%AE%89%E6%90%BA%E5%B8%AF%E3%82%B2%E3%83%BC%E3%83%A0%E7%AB%AF%E6%9C%ABpewpew-standalone/</link>
      <pubDate>Sun, 06 Feb 2022 12:00:07 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/atsamd21%E6%90%AD%E8%BC%89circuitpython%E3%81%A7%E3%82%B2%E3%83%BC%E3%83%A0%E3%81%8C%E4%BD%9C%E3%82%8C%E3%82%8B%E6%BF%80%E5%AE%89%E6%90%BA%E5%B8%AF%E3%82%B2%E3%83%BC%E3%83%A0%E7%AB%AF%E6%9C%ABpewpew-standalone/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/pewpew-standalone-cover.jpg"&gt;この記事はMakerfabsの提供でお届けします。
今回紹介するPewPew StandaloneはMakerfabsから提供いただいたものです。
（ですが、PewPew Standaloneをレビューしたい！と言ったのは自分なので、Makerfabsが無理やりこの商品を押しているわけではなく、inajobの一押しアイテム！、という感じです。）
PewPew Standaloneとは PewPew Standaloneはオープンソースの携帯ゲーム機です。
ゲーム機と言っていますが、その性質は開発用プロトタイプボード、といった雰囲気のもので、この製品も基板むき出しで、ケースなどは付属していません。
仕様  ATSAMD21 8x8 ドットマトリクス赤色LED Micro USB接続（データ専用） 単4電池x2 駆動 十字ボタン+2ボタン = 6ボタン 拡張端子 オープンソースハードウェア 電源スイッチ M2と思われる固定用の穴（ケースは付属しません）  さらに細かい仕様は公式サイトを見てみてください。
遊んでみる 乾電池を入れて電源を入れると、初期ゲームが起動します。 ゲームランチャーが起動し、上下キーでいくつかのゲームを選んで起動することが出来ます。
 frog snake othello  乾電池が手元に無く、USBケーブルをつないで起動するか？と思いましたが、このゲーム機はこれでは起動しません。USBケーブルはデータ転送のみで電源は乾電池から得るという設計のようです。
もっというと、この基板上にはUSBからの5Vを3.3Vに降圧するためのレギュレータを搭載するためのフットプリントが存在しますが、実装されていません。確かにこれが無くても、乾電池さえ入れていればうまく動くので、「必要な人は取り付けてね」というスタンスなのでしょう。
ゲームを起動して気づくのは、単色のドットマトリクスLEDですが、階調表示を実現していることです。
ソースコードを見ると、どうやら4階調までサポートしているようですが、正直なところ消灯、中間、フルパワーの3段階がなんとか視認できるという程度で、あまり見やすいとは言えない表示方法のように見えました。
キーの入力も取りこぼしが多く、こちらもソースコードを見たところメインループの処理をゲームスピードに合わせて律速していると、キーのスキャンもそれに合わせて律速されてしまうようで、このせいで操作性が悪くなっているようでした。まぁ、この点はプログラムの書き方で改善できそうです。
パソコンとつないでみる（ゲーム開発編） パソコンとつなげると、マスストレージデバイスとしてふるまい、普通のUSBメモリのように認識されてファイル一覧を見ることが出来ます。
これはCircuitPythonの仕組みを利用しているようです。
前項で遊んだゲームはmain.pyに記述されたランチャーから各ゲームのスクリプト呼び出すことで実現しています。
ゲームを開発するときは、ドライブ直下にcode.pyというファイルを作り、それを編集することで動作を検証することが出来ます。
保存するたびにゲームが再読み込みされるような動作をするため、スムーズに開発をすることが出来ます。
例えば以下のような内容のcode.pyを作って保存することで、画面に顔マークを横スクロールで表示できます。
import pew pew.init() face = pew.Pix.from_iter(( (0, 0, 3, 3, 3, 3, 0, 0), (0, 3, 0, 0, 0, 0, 3, 0), (3, 0, 3, 0, 0, 3, 0, 3), (3, 0, 3, 0, 0, 3, 0, 3), (3, 0, 0, 0, 0, 0, 0, 3), (3, 0, 3, 3, 3, 3, 0, 3), (0, 3, 0, 0, 0, 0, 3, 0), (0, 0, 3, 3, 3, 3, 0, 0), )) screen = pew.</description>
    </item>
    
    <item>
      <title>小さいソーラパネルで動作する省エネのLチカ</title>
      <link>https://inajob.github.io/iroiro-review/post/%E5%B0%8F%E3%81%95%E3%81%84%E3%82%BD%E3%83%BC%E3%83%A9%E3%83%91%E3%83%8D%E3%83%AB%E3%81%A7%E5%8B%95%E4%BD%9C%E3%81%99%E3%82%8B%E7%9C%81%E3%82%A8%E3%83%8D%E3%81%AEl%E3%83%81%E3%82%AB/</link>
      <pubDate>Wed, 02 Feb 2022 21:00:00 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/%E5%B0%8F%E3%81%95%E3%81%84%E3%82%BD%E3%83%BC%E3%83%A9%E3%83%91%E3%83%8D%E3%83%AB%E3%81%A7%E5%8B%95%E4%BD%9C%E3%81%99%E3%82%8B%E7%9C%81%E3%82%A8%E3%83%8D%E3%81%AEl%E3%83%81%E3%82%AB/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/小さいソーラパネルで動作する省エネのLチカ.jpg"&gt;ゆういちろうさんのTweetから発見。画像もここから転載。
ソーラーパネルを使った作例は、電池なしでも半永久的に動作するため夢がありますが、大きなパネルを使わないと大した電力が得られず、なかなかハードルが高いです。
このTweetでは、一円玉大サイズのソーラーパネルを使い、LEDを点滅させることを実現しています。
M34-2LというLEDフラッシャーICをつかい、また電流量を制限するためにLEDとの間に1MΩの抵抗を挟んでいるようです。 次の点灯のために必要な電力を貯めるために10uFのコンデンサも実装されています。
この仕組みだと室内の照明の明かりなどでも動作するようです。
小さいソーラーパネルの電力でLEDがチカチカするやつ好きなので作ってみた。部屋の灯かりでも動く！ pic.twitter.com/2njMTD2miV
&amp;mdash; ゆういちろう🦐 (@yuuitirou528) January 20, 2022  </description>
    </item>
    
    <item>
      <title>RaspberryPiを使ったWiFiリピーター</title>
      <link>https://inajob.github.io/iroiro-review/post/raspberrypi%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9Fwifi%E3%83%AA%E3%83%94%E3%83%BC%E3%82%BF%E3%83%BC/</link>
      <pubDate>Tue, 01 Feb 2022 23:30:41 +0000</pubDate>
      
      <guid>https://inajob.github.io/iroiro-review/post/raspberrypi%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9Fwifi%E3%83%AA%E3%83%94%E3%83%BC%E3%82%BF%E3%83%BC/</guid>
      <description>&lt;img src="https://inajob.github.io/iroiro-review/img/raspberrypizero-wifi-repeater.jpg"&gt;Truly WiFi Extenderから発見。画像もここから転載
RaspberryPi Zero Wを使ってWiFiリピーターを自作する方法の紹介です。
RaspberryPi Zero WにUSB接続のWiFiドングルを取り付け、それらをブリッジ接続することで、WiFiリピーターを構成しています。
間に広告ブロッカーのプログラムなどを挟むと、役立つものになりそうです。
</description>
    </item>
    
  </channel>
</rss>

